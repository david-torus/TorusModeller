/* eslint-disable */
import React, { useContext } from "react";
import { motion } from "framer-motion";
import { DarkmodeContext } from "../commonComponents/context/DarkmodeContext";
import { ImMoveUp } from "react-icons/im";
import { LiaSitemapSolid } from "react-icons/lia";
import { LuFileCode2 } from "react-icons/lu";
import { GrValidate } from "react-icons/gr";
import { MdOutlineSecurity } from "react-icons/md";

import { GrDocumentStore } from "react-icons/gr";
import { SiSecurityscorecard } from "react-icons/si";
import { SiElement } from "react-icons/si";

const colorChangeAnimation = {
  duration: 1.5, // Duration of the animation in seconds
  easing: "ease-in-out", // Easing function for smooth transitions

  // Keyframes for color change animation
  keyframes: [
    { fill: "blue" }, // Start color
    { fill: "green" }, // End color
  ],
};

const transition = { duration: 2, yoyo: Infinity, ease: "easeInOut" };
export const DataFabrics = ({ isHovered }) => {
  const { darkMode } = useContext(DarkmodeContext);

  const transition = isHovered
    ? {
        duration: 2,
        yoyo: 1,
        ease: "easeInOut",
        iterations: 1,
        repeat: 1,
        repeatType: "loop",
        repeatDelay: 1,
      }
    : {
        duration: 5,
        yoyo: Infinity,
        ease: "easeInOut",
        iterations: Infinity,
        repeat: Infinity,
        repeatType: "loop",
        repeatDelay: 1,
      };

  return (
    <svg
      width="300"
      height="150"
      viewBox="0 0 283 197"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <motion.path
        d="M118.925 39.3113L191.06 39.3113"
        stroke={darkMode ? "white" : "black"}
        stroke-width="0.458397"
        strokeLinecap={isHovered ? "round" : "square"}
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      />
      <motion.path
        d="M118.925 57.3864L191.06 57.3864"
        stroke={darkMode ? "white" : "black"}
        stroke-width="0.458397"
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      />
      <motion.path
        d="M118.166 76.6272L190.301 76.6272"
        stroke={darkMode ? "white" : "black"}
        stroke-width="0.458397"
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      />
      <motion.rect
        x="118.553"
        y="24.188"
        width="72.3843"
        height="75.8178"
        rx="2.75"
        stroke={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
        //transition={transition}
      />
      <motion.path
        d="M210.738 37.9237L282.873 37.9237"
        stroke={darkMode ? "white" : "black"}
        stroke-width="0.458397"
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      />
      <motion.path
        d="M210.738 55.9988L282.873 55.9988"
        stroke={darkMode ? "white" : "black"}
        stroke-width="0.458397"
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      />
      <motion.path
        d="M209.978 75.2396L282.113 75.2396"
        stroke={darkMode ? "white" : "black"}
        stroke-width="0.458397"
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      />
      <motion.rect
        x="210.365"
        y="22.8004"
        width="72.3843"
        height="75.8178"
        rx="2.75"
        stroke={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
        //transition={transition}
      />
      <motion.path
        d="M88.4619 44.7522C100.614 45.4457 106.014 28.7947 118.166 33.6514M88.4619 44.7522C101.964 46.1396 106.689 55.1587 118.841 53.7713M88.4619 44.7522C88.4619 45.1341 88.6084 45.6009 88.8825 46.1398M118.841 72.5041C108.715 71.8103 93.1875 51.6902 88.8825 46.1398M88.8825 46.1398C103.314 66.2599 97.2381 89.1553 118.166 91.2367"
        stroke={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      />
      <motion.path
        d="M166.772 112.744C171.498 108.581 164.747 104.419 171.498 100.256"
        stroke={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      />
      <motion.path
        d="M191.076 63.4845C197.827 53.0775 203.902 63.4845 210.653 51.6899"
        stroke={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      />
      <motion.path
        d="M191.076 94.0116C197.827 83.6046 203.902 94.0116 210.653 82.217"
        stroke={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      />
      <motion.path
        d="M122.25 116C122.25 114.481 123.481 113.25 125 113.25H233.032C234.551 113.25 235.782 114.481 235.782 116V193.256C235.782 194.775 234.551 196.006 233.032 196.006H125C123.481 196.006 122.25 194.775 122.25 193.256V116Z"
        stroke={darkMode ? "white" : "black"}
        stroke-width="0.5"
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      />
      <motion.path
        d="M123.39 127.57H236.032M123.39 144.915H236.032M122 162.954H236.032"
        stroke={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      />
      <motion.path
        d="M11.4583 49.0251H88.5416M11.4583 64.8167H88.5416M62.8541 33.2126V80.6084M37.1458 33.2126V80.6084M11.4583 33.2126H88.5416M11.4583 19.3917V80.6063H88.5416V19.3917H11.4583Z"
        stroke={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
        //transition={transition}
      />
    </svg>
  );
};

export const ProcessFlow = () => {
  const { darkMode } = useContext(DarkmodeContext);
  return (
    <svg
      width="300"
      height="150"
      viewBox="0 0 311 98"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <motion.rect
        x="0.5"
        y="0.5"
        width="48"
        height="37"
        rx="7.5"
        stroke={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
        // transition={{
        //   duration: 2,
        //   yoyo: Infinity,
        //   ease: "easeInOut",
        //   iterations: Infinity,
        //   repeat: Infinity,
        //   repeatType: "loop",
        //   repeatDelay: 1,
        // }}
      />
      <motion.rect
        x="70.5"
        y="0.5"
        width="48"
        height="37"
        rx="7.5"
        stroke={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
        // transition={{
        //   duration: 2.1,
        //   yoyo: Infinity,
        //   ease: "easeInOut",
        //   iterations: Infinity,
        //   repeat: Infinity,
        //   repeatType: "loop",
        //   repeatDelay: 1,
        // }}
      />
      <motion.rect
        x="134.5"
        y="0.5"
        width="48"
        height="37"
        rx="7.5"
        stroke={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
        // transition={{
        //   duration: 2.2,
        //   yoyo: Infinity,
        //   ease: "easeInOut",
        //   iterations: Infinity,
        //   repeat: Infinity,
        //   repeatType: "loop",
        //   repeatDelay: 1,
        // }}
      />
      <motion.rect
        x="262.5"
        y="0.5"
        width="48"
        height="37"
        rx="7.5"
        fill="#D9D9D9"
        fill-opacity="0.01"
        stroke={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
        // transition={{
        //   duration: 2.3,
        //   yoyo: Infinity,
        //   ease: "easeInOut",
        //   iterations: Infinity,
        //   repeat: Infinity,
        //   repeatType: "loop",
        //   repeatDelay: 1,
        // }}
      />
      <motion.rect
        x="167.5"
        y="60.5"
        width="48"
        height="37"
        rx="7.5"
        fill="#D9D9D9"
        fill-opacity="0.01"
        stroke={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
        // transition={{
        //   duration: 2.4,
        //   yoyo: Infinity,
        //   ease: "easeInOut",
        //   iterations: Infinity,
        //   repeat: Infinity,
        //   repeatType: "loop",
        //   repeatDelay: 1,
        // }}
      />
      <motion.rect
        x="198.5"
        y="0.5"
        width="48"
        height="37"
        rx="7.5"
        stroke={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
        // transition={{
        //   duration: 2.6,
        //   yoyo: Infinity,
        //   ease: "easeInOut",
        //   iterations: Infinity,
        //   repeat: Infinity,
        //   repeatType: "loop",
        //   repeatDelay: 1,
        // }}
      />
      <motion.path
        d="M118.5 24.9995C125 18.4995 126 29.4995 134.5 20.9995M49 24.9995C55.5 18.4995 61.5 29.4995 70 20.9995M246.5 21C253 14.5 254 25.5 262.5 17M182.5 22.4994C189 15.9994 190 26.9994 198.5 18.4994"
        stroke={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
        // transition={{
        //   duration: 3,
        //   yoyo: Infinity,
        //   ease: "easeInOut",
        //   iterations: Infinity,
        //   repeat: Infinity,
        //   repeatType: "loop",
        //   repeatDelay: 1,
        // }}
      />
      <motion.path
        d="M156.499 37.5C152.5 53 190.5 47 190.5 60.5M288.5 37.5C253.5 45 255.5 86 215.5 79"
        stroke={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
        // transition={{
        //   duration: 3,
        //   yoyo: Infinity,
        //   ease: "easeInOut",
        //   iterations: Infinity,
        // }}
      />
      <motion.g
        clip-path="url(#clip0_17_84)"
        initial={{ offsetDistance: "0%", scale: 2.5 }}
        animate={{ offsetDistance: "100%", scale: 1 }}
        // transition={{
        //   duration: 2,
        //   ease: "easeInOut",
        //   iterations: Infinity,
        // }}
      >
        <motion.path
          d="M35.9601 16.9275L27.4128 21.5084L27.22 21.4554L26.0926 21.1456L25.6224 20.995L26.3936 19.5119L26.5662 19.1801L26.2966 18.9208L23.3716 16.1083L23.1213 15.8677L22.8084 16.0181L21.2245 16.7796L21.0636 16.3156L20.7418 15.2326L20.6355 14.875H20.2625H18V6.85373L35.9601 16.9275ZM17.7698 23.1397L17.8112 23.1132L17.8466 23.0792C17.8741 23.0526 17.9396 23.0058 18.0358 22.9662C18.1296 22.9275 18.2273 22.9062 18.3125 22.9062C18.6921 22.9062 18.9672 23.0262 19.1441 23.1964C19.3192 23.3648 19.4375 23.6197 19.4375 23.9688C19.4375 24.3178 19.3192 24.5727 19.1441 24.7411C18.9672 24.9113 18.6921 25.0312 18.3125 25.0312C18.2273 25.0312 18.1296 25.01 18.0358 24.9713C17.9396 24.9317 17.8741 24.8849 17.8466 24.8583L17.763 24.778L17.6526 24.7426C17.5599 24.7129 17.4412 24.621 17.3384 24.4516C17.2367 24.2839 17.1875 24.0991 17.1875 23.9688C17.1875 23.7294 17.3678 23.3974 17.7698 23.1397Z"
          stroke={darkMode ? "white" : "black"}
        />
        <motion.mask id="path-10-inside-1_17_84" fill="white">
          <motion.path
            d="M25.625 24.75V23.1875L23.8375 22.5625C23.675 22.0938 23.5125 21.625 23.1875 21.1562L24 19.5937L22.8625 18.5L21.2375 19.2812C20.75 18.9688 20.2625 18.8125 19.775 18.6563L19.125 16.9375H17.5L16.85 18.6563C16.3625 18.8125 15.875 18.9688 15.3875 19.2812L13.7625 18.5L12.625 19.5937L13.4375 21.3125C13.1125 21.7813 12.95 22.25 12.7875 22.7187L11 23.1875V24.75L12.7875 25.375C12.95 25.8437 13.1125 26.3125 13.4375 26.7812L12.625 28.3438L13.7625 29.4375L15.55 28.6562C16.0375 28.9688 16.525 29.125 17.0125 29.2812L17.5 31H19.125L19.775 29.2812C20.2625 29.125 20.75 28.9688 21.2375 28.6562L22.8625 29.4375L24 28.3438L23.1875 26.625C23.5125 26.1562 23.675 25.6875 23.8375 25.2188L25.625 24.75ZM18.3125 27.0938C16.525 27.0938 15.0625 25.6875 15.0625 23.9688C15.0625 22.25 16.525 20.8438 18.3125 20.8438C20.1 20.8438 21.5625 22.25 21.5625 23.9688C21.5625 25.6875 20.1 27.0938 18.3125 27.0938Z"
            initial={{ offsetDistance: "0%", scale: 2.5 }}
            animate={{ offsetDistance: "100%", scale: 1 }}
          />
        </motion.mask>
        <motion.path
          d="M25.625 24.75L25.8787 25.7173L26.625 25.5216V24.75H25.625ZM25.625 23.1875H26.625V22.4778L25.9551 22.2435L25.625 23.1875ZM23.8375 22.5625L22.8927 22.89L23.051 23.3469L23.5074 23.5065L23.8375 22.5625ZM23.1875 21.1562L22.3003 20.6949L22.0219 21.2302L22.3657 21.726L23.1875 21.1562ZM24 19.5937L24.8872 20.0551L25.2323 19.3914L24.6931 18.8729L24 19.5937ZM22.8625 18.5L23.5556 17.7792L23.0551 17.2979L22.4292 17.5987L22.8625 18.5ZM21.2375 19.2812L20.6978 20.1231L21.1677 20.4244L21.6708 20.1825L21.2375 19.2812ZM19.775 18.6563L18.8397 19.01L19.0103 19.4613L19.4698 19.6085L19.775 18.6563ZM19.125 16.9375L20.0603 16.5838L19.8159 15.9375H19.125V16.9375ZM17.5 16.9375V15.9375H16.8091L16.5647 16.5838L17.5 16.9375ZM16.85 18.6563L17.1552 19.6085L17.6147 19.4613L17.7853 19.01L16.85 18.6563ZM15.3875 19.2812L14.9542 20.1825L15.4573 20.4244L15.9272 20.1231L15.3875 19.2812ZM13.7625 18.5L14.1958 17.5987L13.5699 17.2979L13.0694 17.7792L13.7625 18.5ZM12.625 19.5937L11.9319 18.8729L11.4137 19.3712L11.7209 20.0211L12.625 19.5937ZM13.4375 21.3125L14.2593 21.8823L14.5885 21.4075L14.3416 20.8851L13.4375 21.3125ZM12.7875 22.7187L13.0412 23.686L13.5575 23.5506L13.7323 23.0463L12.7875 22.7187ZM11 23.1875L10.7463 22.2202L10 22.4159V23.1875H11ZM11 24.75H10V25.4597L10.6699 25.694L11 24.75ZM12.7875 25.375L13.7323 25.0475L13.574 24.5906L13.1176 24.431L12.7875 25.375ZM13.4375 26.7812L14.3247 27.2426L14.6031 26.7073L14.2593 26.2115L13.4375 26.7812ZM12.625 28.3438L11.7378 27.8824L11.3927 28.5461L11.9319 29.0646L12.625 28.3438ZM13.7625 29.4375L13.0694 30.1583L13.5509 30.6213L14.163 30.3538L13.7625 29.4375ZM15.55 28.6562L16.0897 27.8144L15.6395 27.5258L15.1495 27.7399L15.55 28.6562ZM17.0125 29.2812L17.9746 29.0084L17.8283 28.4926L17.3177 28.329L17.0125 29.2812ZM17.5 31L16.5379 31.2729L16.7442 32H17.5V31ZM19.125 31V32H19.8159L20.0603 31.3537L19.125 31ZM19.775 29.2812L19.4698 28.329L19.0103 28.4762L18.8397 28.9275L19.775 29.2812ZM21.2375 28.6562L21.6708 27.755L21.1677 27.5131L20.6978 27.8144L21.2375 28.6562ZM22.8625 29.4375L22.4292 30.3388L23.0551 30.6396L23.5556 30.1583L22.8625 29.4375ZM24 28.3438L24.6931 29.0646L25.2113 28.5663L24.9041 27.9164L24 28.3438ZM23.1875 26.625L22.3657 26.0552L22.0365 26.53L22.2834 27.0524L23.1875 26.625ZM23.8375 25.2188L23.5838 24.2515L23.0675 24.3869L22.8927 24.8912L23.8375 25.2188ZM26.625 24.75V23.1875H24.625V24.75H26.625ZM25.9551 22.2435L24.1676 21.6185L23.5074 23.5065L25.2949 24.1315L25.9551 22.2435ZM24.7823 22.235C24.6229 21.7751 24.4225 21.1825 24.0093 20.5865L22.3657 21.726C22.6025 22.0675 22.7271 22.4124 22.8927 22.89L24.7823 22.235ZM24.0747 21.6176L24.8872 20.0551L23.1128 19.1324L22.3003 20.6949L24.0747 21.6176ZM24.6931 18.8729L23.5556 17.7792L22.1694 19.2208L23.3069 20.3146L24.6931 18.8729ZM22.4292 17.5987L20.8042 18.38L21.6708 20.1825L23.2958 19.4013L22.4292 17.5987ZM21.7772 18.4394C21.1649 18.0469 20.5577 17.857 20.0802 17.704L19.4698 19.6085C19.9673 19.768 20.3351 19.8906 20.6978 20.1231L21.7772 18.4394ZM20.7103 18.3025L20.0603 16.5838L18.1897 17.2912L18.8397 19.01L20.7103 18.3025ZM19.125 15.9375H17.5V17.9375H19.125V15.9375ZM16.5647 16.5838L15.9147 18.3025L17.7853 19.01L18.4353 17.2912L16.5647 16.5838ZM16.5448 17.704C16.0673 17.857 15.4601 18.0469 14.8478 18.4394L15.9272 20.1231C16.2899 19.8906 16.6577 19.768 17.1552 19.6085L16.5448 17.704ZM15.8208 18.38L14.1958 17.5987L13.3292 19.4013L14.9542 20.1825L15.8208 18.38ZM13.0694 17.7792L11.9319 18.8729L13.3181 20.3146L14.4556 19.2208L13.0694 17.7792ZM11.7209 20.0211L12.5334 21.7399L14.3416 20.8851L13.5291 19.1664L11.7209 20.0211ZM12.6157 20.7427C12.2025 21.3387 12.0021 21.9314 11.8427 22.3912L13.7323 23.0463C13.8979 22.5686 14.0225 22.2238 14.2593 21.8823L12.6157 20.7427ZM12.5338 21.7515L10.7463 22.2202L11.2537 24.1548L13.0412 23.686L12.5338 21.7515ZM10 23.1875V24.75H12V23.1875H10ZM10.6699 25.694L12.4574 26.319L13.1176 24.431L11.3301 23.806L10.6699 25.694ZM11.8427 25.7025C12.0021 26.1624 12.2025 26.755 12.6157 27.351L14.2593 26.2115C14.0225 25.87 13.8979 25.5251 13.7323 25.0475L11.8427 25.7025ZM12.5503 26.3199L11.7378 27.8824L13.5122 28.8051L14.3247 27.2426L12.5503 26.3199ZM11.9319 29.0646L13.0694 30.1583L14.4556 28.7167L13.3181 27.6229L11.9319 29.0646ZM14.163 30.3538L15.9505 29.5726L15.1495 27.7399L13.362 28.5212L14.163 30.3538ZM15.0103 29.4981C15.6226 29.8906 16.2298 30.0805 16.7073 30.2335L17.3177 28.329C16.8202 28.1695 16.4524 28.0469 16.0897 27.8144L15.0103 29.4981ZM16.0504 29.5541L16.5379 31.2729L18.4621 30.7271L17.9746 29.0084L16.0504 29.5541ZM17.5 32H19.125V30H17.5V32ZM20.0603 31.3537L20.7103 29.635L18.8397 28.9275L18.1897 30.6463L20.0603 31.3537ZM20.0802 30.2335C20.5577 30.0805 21.1649 29.8906 21.7772 29.4981L20.6978 27.8144C20.3351 28.0469 19.9673 28.1695 19.4698 28.329L20.0802 30.2335ZM20.8042 29.5575L22.4292 30.3388L23.2958 28.5362L21.6708 27.755L20.8042 29.5575ZM23.5556 30.1583L24.6931 29.0646L23.3069 27.6229L22.1694 28.7167L23.5556 30.1583ZM24.9041 27.9164L24.0916 26.1976L22.2834 27.0524L23.0959 28.7711L24.9041 27.9164ZM24.0093 27.1948C24.4225 26.5988 24.6229 26.0061 24.7823 25.5463L22.8927 24.8912C22.7271 25.3689 22.6025 25.7137 22.3657 26.0552L24.0093 27.1948ZM24.0912 26.186L25.8787 25.7173L25.3713 23.7827L23.5838 24.2515L24.0912 26.186ZM18.3125 26.0938C17.04 26.0938 16.0625 25.0986 16.0625 23.9688H14.0625C14.0625 26.2764 16.01 28.0938 18.3125 28.0938V26.0938ZM16.0625 23.9688C16.0625 22.8389 17.04 21.8438 18.3125 21.8438V19.8438C16.01 19.8438 14.0625 21.6611 14.0625 23.9688H16.0625ZM18.3125 21.8438C19.585 21.8438 20.5625 22.8389 20.5625 23.9688H22.5625C22.5625 21.6611 20.615 19.8438 18.3125 19.8438V21.8438ZM20.5625 23.9688C20.5625 25.0986 19.585 26.0938 18.3125 26.0938V28.0938C20.615 28.0938 22.5625 26.2764 22.5625 23.9688H20.5625Z"
          fill={darkMode ? "white" : "black"}
          mask="url(#path-10-inside-1_17_84)"
          initial={{ pathLength: 0 }}
          animate={{ pathLength: 1 }}
          transition={colorChangeAnimation}
        />
      </motion.g>
      <motion.path
        d="M95.1538 12.9444H107.846C108.152 12.9444 108.446 13.0908 108.662 13.3512C108.878 13.6117 109 13.965 109 14.3333V22.6667C109 23.035 108.878 23.3883 108.662 23.6488C108.446 23.9092 108.152 24.0556 107.846 24.0556H95.1538M83.6154 24.0556H80.1538C79.8478 24.0556 79.5543 23.9092 79.338 23.6488C79.1216 23.3883 79 23.035 79 22.6667V14.3333C79 13.965 79.1216 13.6117 79.338 13.3512C79.5543 13.0908 79.8478 12.9444 80.1538 12.9444H83.6154M87.0769 6H91.6923M87.0769 31H91.6923M89.3846 6V31"
        stroke-linecap="round"
        stroke-linejoin="round"
        strokeLinecap="round"
        stroke={darkMode ? "white" : "black"}
        initial={{ offsetDistance: "0%", scale: 2.5 }}
        animate={{ offsetDistance: "100%", scale: 1 }}
        // transition={{
        //   duration: 2,
        //   ease: "easeInOut",
        //   iterations: Infinity,
        // }}
      />
      <motion.path
        d="M280 12L287.8 18.5L280 25M293 12V18.5V25"
        stroke-linecap="round"
        stroke-linejoin="round"
        strokeLinecap="round"
        stroke={darkMode ? "white" : "black"}
        initial={{ offsetDistance: "0%", scale: 2.5 }}
        animate={{ offsetDistance: "100%", scale: 1 }}
        // transition={{
        //   duration: 2,
        //   ease: "easeInOut",
        //   iterations: Infinity,
        // }}
      />
      <motion.path
        d="M202.5 78C202.5 84.9222 197.109 90.5 190.5 90.5C183.891 90.5 178.5 84.9222 178.5 78C178.5 71.0778 183.891 65.5 190.5 65.5C197.109 65.5 202.5 71.0778 202.5 78Z"
        strokeLinecap="round"
        stroke={darkMode ? "white" : "black"}
        initial={{ offsetDistance: "0%", scale: 2.5 }}
        animate={{ offsetDistance: "100%", scale: 1 }}
        // transition={{
        //   duration: 2,
        //   ease: "easeInOut",
        //   iterations: Infinity,
        // }}
      />
      <motion.path
        d="M181.5 69.5L199 86.5"
        stroke={darkMode ? "white" : "black"}
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      />
      <motion.path
        d="M157.563 26.1875C155.901 26.1875 154.099 28.4115 152.208 28.4115C150.318 28.4115 148.344 26.5104 148.344 26.5104M159.437 26.1875C161.099 26.1875 162.901 28.4115 164.792 28.4115C166.682 28.4115 168.656 26.526 168.656 26.526"
        stroke={darkMode ? "white" : "black"}
        stroke-linecap="round"
        stroke-linejoin="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      />
      <motion.path
        d="M158.5 27.1094C159.018 27.1094 159.437 26.6896 159.437 26.1719C159.437 25.6541 159.018 25.2344 158.5 25.2344C157.982 25.2344 157.562 25.6541 157.562 26.1719C157.562 26.6896 157.982 27.1094 158.5 27.1094Z"
        stroke={darkMode ? "white" : "black"}
        stroke-linecap="round"
        stroke-linejoin="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      />
      <motion.path
        d="M158.5 25.2343V22.8125M149.458 19.1198L153.974 14.6041M168.417 14.6041L163.901 19.1198L161.906 17.125M149.458 14.6041L153.974 19.1198M158.5 27.1093V27.4791M158.5 16.8593L155.615 22.8125H161.385L158.5 16.8593Z"
        stroke={darkMode ? "white" : "black"}
        initial={{ offsetDistance: "0%", scale: 2.5 }}
        animate={{ offsetDistance: "100%", scale: 1 }}
        // transition={{
        //   duration: 2,
        //   ease: "easeInOut",
        //   iterations: Infinity,
        // }}
      />
      <motion.path
        d="M229.433 17.4583L226.599 14.4629C226.502 14.3661 226.453 14.243 226.453 14.0935C226.453 13.944 226.502 13.8183 226.599 13.7165C226.696 13.6147 226.817 13.5641 226.96 13.5648C227.104 13.5656 227.223 13.6161 227.316 13.7165L230.846 17.3879C231.01 17.5584 231.092 17.7624 231.092 18C231.092 18.2376 231.01 18.4416 230.846 18.6121L227.316 22.2835C227.218 22.3846 227.099 22.4316 226.957 22.4243C226.816 22.4171 226.696 22.3629 226.599 22.2618C226.502 22.1607 226.453 22.0401 226.453 21.9C226.453 21.7599 226.502 21.6389 226.599 21.5371L229.432 18.5417H219.896C219.748 18.5417 219.624 18.4897 219.525 18.3857C219.425 18.2817 219.375 18.1531 219.375 18C219.375 17.8469 219.425 17.7183 219.525 17.6143C219.625 17.5103 219.749 17.4587 219.896 17.4594L229.433 17.4583ZM214.167 18C214.167 20.4194 214.974 22.4688 216.589 24.1479C218.203 25.8271 220.174 26.6667 222.5 26.6667C223.086 26.6667 223.661 26.6046 224.226 26.4803C224.791 26.3561 225.338 26.1698 225.868 25.9213C226.016 25.8498 226.164 25.826 226.314 25.8498C226.463 25.8737 226.594 25.9452 226.707 26.0643C226.812 26.1756 226.842 26.3092 226.796 26.4652C226.75 26.6212 226.656 26.732 226.512 26.7978C225.881 27.1134 225.231 27.351 224.562 27.5106C223.894 27.6702 223.207 27.75 222.5 27.75C221.203 27.75 219.984 27.4943 218.844 26.983C217.703 26.4709 216.711 25.7762 215.868 24.8987C215.024 24.0212 214.356 22.9898 213.864 21.8047C213.371 20.6195 213.125 19.3524 213.125 18.0032C213.125 16.6541 213.371 15.3866 213.864 14.2007C214.356 13.0149 215.024 11.9824 215.867 11.1035C216.71 10.2246 217.701 9.52942 218.842 9.01808C219.982 8.50675 221.201 8.25072 222.498 8.25C223.201 8.25 223.896 8.33233 224.584 8.497C225.273 8.66167 225.932 8.90361 226.564 9.22283C226.702 9.28783 226.787 9.39183 226.819 9.53483C226.85 9.67783 226.815 9.80169 226.713 9.90642C226.598 10.0256 226.47 10.096 226.328 10.1177C226.186 10.1393 226.043 10.1216 225.899 10.0646C225.355 9.8118 224.797 9.62656 224.226 9.50883C223.655 9.39183 223.08 9.33333 222.5 9.33333C220.174 9.33333 218.203 10.1729 216.589 11.8521C214.974 13.5313 214.167 15.5806 214.167 18Z"
        stroke={darkMode ? "white" : "black"}
        initial={{ offsetDistance: "0%", scale: 2.5 }}
        animate={{ offsetDistance: "100%", scale: 1 }}
        // transition={{
        //   duration: 2,
        //   ease: "easeInOut",
        //   iterations: Infinity,
        // }}
      />
      <motion.defs>
        <clipPath id="clip0_17_84">
          <motion.rect
            width="26"
            height="25"
            fill="white"
            transform="translate(11 6)"
            initial={{ pathLength: 0 }}
            animate={{ pathLength: 1 }}
          />
        </clipPath>
      </motion.defs>
    </svg>
  );
};

export const UserFabric = () => {
  const { darkMode } = useContext(DarkmodeContext);
  return (
    <svg
      width="300"
      height="150"
      viewBox="0 0 301 150"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <motion.path
        d="M20.0512 8.7677H224.258C230.831 8.7677 236.159 14.0962 236.159 20.6693C236.159 27.2423 230.831 32.5709 224.258 32.5709H20.0512C13.4782 32.5709 8.14966 27.2423 8.14966 20.6693C8.14966 14.0962 13.4782 8.7677 20.0512 8.7677Z"
        stroke={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
        // transition={{
        //   duration: 2,
        //   yoyo: Infinity,
        //   ease: "easeInOut",
        //   iterations: Infinity,
        //   repeat: Infinity,
        //   repeatType: "loop",
        //   repeatDelay: 1,
        // }}
      />
      <motion.path
        d="M22.0118 47.7441H162.319C167.565 47.7441 171.819 51.9974 171.819 57.2441V140C171.819 145.247 167.565 149.5 162.319 149.5H22.0118C16.7651 149.5 12.5118 145.247 12.5118 140V98.622V57.2441C12.5118 51.9974 16.7651 47.7441 22.0118 47.7441Z"
        stroke={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
        // transition={{
        //   duration: 2,
        //   yoyo: Infinity,
        //   ease: "easeInOut",
        //   iterations: Infinity,
        //   repeat: Infinity,
        //   repeatType: "loop",
        //   repeatDelay: 2,
        // }}
      />
      <motion.path
        d="M300.5 21.2598C300.5 32.7251 291.203 42.0197 279.735 42.0197C268.266 42.0197 258.97 32.7251 258.97 21.2598C258.97 9.79462 268.266 0.5 279.735 0.5C291.203 0.5 300.5 9.79462 300.5 21.2598Z"
        stroke={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
        // transition={{
        //   duration: 2,
        //   yoyo: Infinity,
        //   ease: "easeInOut",
        //   iterations: Infinity,
        //   repeat: Infinity,
        //   repeatType: "loop",
        //   repeatDelay: 1,
        // }}
      />
      <motion.path
        d="M259.015 20.6693C250.836 29.5276 244.838 18.8977 236.114 23.0315"
        stroke={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      />
      <motion.path
        d="M8.74035 21.2599C-2.71033 43.7008 -1.61963 75.5906 13.1024 100.394"
        stroke={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      />
      <motion.rect
        x="26.6885"
        y="58.374"
        width="133.134"
        height="4.90551"
        rx="2.45276"
        stroke={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      />
      <motion.rect
        x="113.93"
        y="80.8149"
        width="46.983"
        height="49.7874"
        rx="4.5"
        stroke={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
        // transition={{
        //   duration: 2,
        //   yoyo: Infinity,
        //   ease: "easeInOut",
        //   iterations: Infinity,
        //   repeat: Infinity,
        //   repeatType: "loop",
        //   repeatDelay: 1,
        // }}
      />
      <motion.rect
        x="28.6196"
        y="80.5649"
        width="69.2934"
        height="8.94882"
        rx="4.47441"
        stroke={darkMode ? "white" : "black"}
        stroke-width="0.5"
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      />
      <motion.path
        d="M33.094 100.644H93.4386C95.9098 100.644 97.913 102.647 97.913 105.118C97.913 107.589 95.9098 109.592 93.4386 109.592H33.094C30.6229 109.592 28.6196 107.589 28.6196 105.118C28.6196 102.647 30.6229 100.644 33.094 100.644Z"
        stroke={darkMode ? "white" : "black"}
        stroke-width="0.5"
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      />
      <motion.rect
        x="28.8696"
        y="123.335"
        width="33.8967"
        height="7.26772"
        rx="3.63386"
        stroke={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      />
      <motion.rect
        x="65.9473"
        y="123.335"
        width="31.7157"
        height="7.26772"
        rx="3.63386"
        stroke={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      />
      <motion.path
        d="M64.3567 89.7637C63.2662 95.6693 71.9904 94.4882 69.8093 99.8031M48.9829 123.425C52.2545 115.748 60.5399 118.701 64.3567 109.252C74.7167 111.614 71.9904 120.472 81.2598 123.425M98.1629 104.528C104.161 99.8031 107.432 106.89 113.975 104.528C111.249 89.7637 101.434 94.4882 98.1629 85.6299"
        stroke={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      />
      <motion.path
        d="M113.975 105.118C104.161 109.843 107.432 124.606 98.1628 126.969"
        stroke={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      />
      <motion.path
        d="M271.449 28.3465C271.449 27.0935 271.909 25.8918 272.727 25.0058C273.545 24.1198 274.655 23.6221 275.812 23.6221H284.536C285.693 23.6221 286.802 24.1198 287.62 25.0058C288.438 25.8918 288.898 27.0935 288.898 28.3465C288.898 28.973 288.668 29.5738 288.259 30.0168C287.85 30.4598 287.295 30.7087 286.717 30.7087H273.631C273.052 30.7087 272.497 30.4598 272.088 30.0168C271.679 29.5738 271.449 28.973 271.449 28.3465Z"
        stroke={darkMode ? "white" : "black"}
        stroke-width="1.5"
        stroke-linejoin="round"
        strokeLinecap="round"
        initial={{ offsetDistance: "0%", scale: 2.5 }}
        animate={{ offsetDistance: "100%", scale: 1 }}
        // transition={{
        //   duration: 2,
        //   ease: "easeInOut",
        //   iterations: Infinity,
        // }}
      />
      <motion.path
        d="M280.174 18.8976C281.981 18.8976 283.445 17.3113 283.445 15.3543C283.445 13.3974 281.981 11.811 280.174 11.811C278.367 11.811 276.902 13.3974 276.902 15.3543C276.902 17.3113 278.367 18.8976 280.174 18.8976Z"
        stroke={darkMode ? "white" : "black"}
        stroke-width="1.5"
        strokeLinecap="round"
        initial={{ offsetDistance: "0%", scale: 2.5 }}
        animate={{ offsetDistance: "100%", scale: 1 }}
        // transition={{
        //   duration: 2,
        //   ease: "easeInOut",
        //   iterations: Infinity,
        // }}
      />
      <motion.path
        d="M125.32 118.221H149.243V93.3071H125.32V118.221ZM147.471 111.078L141.303 104.655L143.884 101.968L147.471 105.703V111.078ZM127.092 95.1526H147.471V103.093L143.884 99.3574L140.05 103.35L134.512 97.583L127.092 105.311V95.1526ZM127.092 107.921L134.512 100.193L147.471 113.688V116.376H127.092V107.921Z"
        fill={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ offsetDistance: "0%", scale: 2 }}
        animate={{ offsetDistance: "100%", scale: 1 }}
        // transition={{
        //   duration: 1,
        //   ease: "easeInOut",
        //   iterations: Infinity,
        // }}
      />
      <motion.mask
        id="path-17-outside-1_17_66"
        maskUnits="userSpaceOnUse"
        x="40.3494"
        y="124.016"
        width="10"
        height="5"
        fill="black"
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      >
        <motion.rect
          fill="white"
          x="40.3494"
          y="124.016"
          width="10"
          height="5"
        />
        <motion.path
          d="M41.7016 128.016V125.107H42.7187C42.9213 125.107 43.0885 125.142 43.2201 125.212C43.3517 125.281 43.4497 125.374 43.5141 125.492C43.5785 125.608 43.6107 125.737 43.6107 125.879C43.6107 126.004 43.5885 126.108 43.544 126.189C43.5004 126.27 43.4426 126.335 43.3707 126.382C43.2996 126.43 43.2225 126.465 43.1391 126.487V126.516C43.2282 126.521 43.3176 126.553 43.4076 126.609C43.4976 126.666 43.5729 126.748 43.6335 126.854C43.6941 126.96 43.7244 127.09 43.7244 127.243C43.7244 127.389 43.6912 127.52 43.6249 127.636C43.5586 127.753 43.454 127.845 43.311 127.913C43.168 127.982 42.9819 128.016 42.7528 128.016H41.7016ZM42.0539 127.703H42.7528C42.9829 127.703 43.1462 127.659 43.2428 127.57C43.3404 127.48 43.3891 127.371 43.3891 127.243C43.3891 127.145 43.364 127.054 43.3139 126.97C43.2637 126.886 43.1922 126.819 43.0994 126.769C43.0066 126.717 42.8967 126.692 42.7698 126.692H42.0539V127.703ZM42.0539 126.385H42.7073C42.8134 126.385 42.909 126.364 42.9943 126.323C43.0804 126.281 43.1486 126.222 43.1988 126.146C43.2499 126.071 43.2755 125.982 43.2755 125.879C43.2755 125.752 43.231 125.643 43.142 125.554C43.053 125.464 42.9119 125.419 42.7187 125.419H42.0539V126.385ZM44.1441 125.419V125.107H46.3259V125.419H45.4112V128.016H45.0589V125.419H44.1441ZM49.1764 125.107V128.016H48.8355L47.2503 125.732H47.2219V128.016H46.8696V125.107H47.2105L48.8014 127.396H48.8298V125.107H49.1764Z"
          strokeLinecap="round"
          initial={{ pathLength: 0 }}
          animate={{ pathLength: 1 }}
        />
      </motion.mask>
      <motion.path
        d="M41.7016 128.016H41.2016V128.516H41.7016V128.016ZM41.7016 125.107V124.607H41.2016V125.107H41.7016ZM43.2201 125.212L42.9851 125.653L42.9876 125.654L43.2201 125.212ZM43.5141 125.492L43.0757 125.732L43.0766 125.734L43.5141 125.492ZM43.544 126.189L43.1052 125.949L43.1031 125.953L43.544 126.189ZM43.3707 126.382L43.0959 125.965L43.0933 125.966L43.3707 126.382ZM43.1391 126.487L43.0076 126.005L42.6391 126.105V126.487H43.1391ZM43.1391 126.516H42.6391V126.985L43.1073 127.015L43.1391 126.516ZM43.4076 126.609L43.1406 127.032L43.1406 127.032L43.4076 126.609ZM43.6249 127.636L44.0595 127.884L44.0595 127.884L43.6249 127.636ZM43.311 127.913L43.0958 127.462L43.0958 127.462L43.311 127.913ZM42.0539 127.703H41.5539V128.203H42.0539V127.703ZM43.2428 127.57L43.5817 127.937L43.5818 127.937L43.2428 127.57ZM43.3139 126.97L42.8843 127.226L42.8855 127.228L43.3139 126.97ZM43.0994 126.769L42.8581 127.207L42.8615 127.208L43.0994 126.769ZM42.0539 126.692V126.192H41.5539V126.692H42.0539ZM42.0539 126.385H41.5539V126.885H42.0539V126.385ZM42.9943 126.323L42.7766 125.872L42.7746 125.873L42.9943 126.323ZM43.1988 126.146L42.7844 125.867L42.782 125.87L43.1988 126.146ZM43.142 125.554L42.7866 125.906L42.7884 125.908L43.142 125.554ZM42.0539 125.419V124.919H41.5539V125.419H42.0539ZM42.2016 128.016V125.107H41.2016V128.016H42.2016ZM41.7016 125.607H42.7187V124.607H41.7016V125.607ZM42.7187 125.607C42.8675 125.607 42.9471 125.633 42.9851 125.653L43.4551 124.77C43.2298 124.651 42.9752 124.607 42.7187 124.607V125.607ZM42.9876 125.654C43.0422 125.683 43.0637 125.71 43.0757 125.732L43.9525 125.251C43.8358 125.038 43.6613 124.879 43.4526 124.769L42.9876 125.654ZM43.0766 125.734C43.0973 125.771 43.1107 125.816 43.1107 125.879H44.1107C44.1107 125.659 44.0598 125.445 43.9517 125.25L43.0766 125.734ZM43.1107 125.879C43.1107 125.948 43.098 125.962 43.1052 125.949L43.9827 126.429C44.0789 126.253 44.1107 126.06 44.1107 125.879H43.1107ZM43.1031 125.953C43.0989 125.961 43.0962 125.964 43.0958 125.965C43.0955 125.965 43.0955 125.965 43.0957 125.965C43.0959 125.965 43.096 125.964 43.0959 125.965L43.6455 126.8C43.7921 126.703 43.9049 126.574 43.9849 126.425L43.1031 125.953ZM43.0933 125.966C43.0676 125.983 43.0397 125.996 43.0076 126.005L43.2707 126.97C43.4052 126.933 43.5317 126.876 43.648 126.798L43.0933 125.966ZM42.6391 126.487V126.516H43.6391V126.487H42.6391ZM43.1073 127.015C43.1037 127.015 43.1036 127.014 43.1082 127.015C43.1131 127.017 43.1239 127.022 43.1406 127.032L43.6746 126.187C43.5275 126.094 43.3583 126.029 43.171 126.017L43.1073 127.015ZM43.1406 127.032C43.1518 127.039 43.1733 127.056 43.1993 127.102L44.0676 126.606C43.9724 126.439 43.8433 126.293 43.6746 126.187L43.1406 127.032ZM43.1993 127.102C43.2071 127.115 43.2244 127.155 43.2244 127.243H44.2244C44.2244 127.025 44.1811 126.804 44.0676 126.606L43.1993 127.102ZM43.2244 127.243C43.2244 127.31 43.21 127.355 43.1904 127.389L44.0595 127.884C44.1724 127.685 44.2244 127.468 44.2244 127.243H43.2244ZM43.1904 127.389C43.1833 127.402 43.1638 127.43 43.0958 127.462L43.5262 128.365C43.7443 128.261 43.934 128.104 44.0595 127.884L43.1904 127.389ZM43.0958 127.462C43.0432 127.487 42.9383 127.516 42.7528 127.516V128.516C43.0256 128.516 43.2929 128.476 43.5262 128.365L43.0958 127.462ZM42.7528 127.516H41.7016V128.516H42.7528V127.516ZM42.0539 128.203H42.7528V127.203H42.0539V128.203ZM42.7528 128.203C43.0222 128.203 43.3445 128.156 43.5817 127.937L42.904 127.202C42.9292 127.179 42.9424 127.18 42.9164 127.187C42.8898 127.195 42.8382 127.203 42.7528 127.203V128.203ZM43.5818 127.937C43.7776 127.757 43.8891 127.516 43.8891 127.243H42.8891C42.8891 127.243 42.8892 127.24 42.8903 127.234C42.8914 127.229 42.8934 127.223 42.8962 127.216C42.9025 127.202 42.9084 127.198 42.9038 127.202L43.5818 127.937ZM43.8891 127.243C43.8891 127.055 43.8399 126.875 43.7422 126.712L42.8855 127.228C42.8879 127.232 42.8883 127.234 42.8883 127.234C42.8884 127.234 42.8891 127.237 42.8891 127.243H43.8891ZM43.7434 126.714C43.6436 126.547 43.5031 126.419 43.3372 126.329L42.8615 127.208C42.8812 127.219 42.8837 127.225 42.8843 127.226L43.7434 126.714ZM43.3407 126.331C43.1606 126.231 42.9645 126.192 42.7698 126.192V127.192C42.829 127.192 42.8525 127.203 42.8581 127.207L43.3407 126.331ZM42.7698 126.192H42.0539V127.192H42.7698V126.192ZM41.5539 126.692V127.703H42.5539V126.692H41.5539ZM42.0539 126.885H42.7073V125.885H42.0539V126.885ZM42.7073 126.885C42.8804 126.885 43.0525 126.851 43.2139 126.772L42.7746 125.873C42.7655 125.878 42.7463 125.885 42.7073 125.885V126.885ZM43.2119 126.773C43.3744 126.694 43.5132 126.577 43.6156 126.423L42.782 125.87C42.782 125.87 42.7827 125.869 42.7838 125.868C42.7846 125.868 42.783 125.869 42.7766 125.872L43.2119 126.773ZM43.6132 126.426C43.7266 126.258 43.7755 126.069 43.7755 125.879H42.7755C42.7755 125.889 42.7744 125.89 42.7758 125.885C42.7764 125.883 42.7775 125.88 42.7791 125.876C42.7807 125.873 42.7825 125.869 42.7844 125.867L43.6132 126.426ZM43.7755 125.879C43.7755 125.621 43.6799 125.385 43.4955 125.201L42.7884 125.908C42.7894 125.909 42.7883 125.908 42.7862 125.905C42.7841 125.901 42.7817 125.897 42.7796 125.892C42.7775 125.887 42.7764 125.883 42.7758 125.88C42.7753 125.877 42.7755 125.877 42.7755 125.879H43.7755ZM43.4974 125.202C43.275 124.978 42.9763 124.919 42.7187 124.919V125.919C42.7785 125.919 42.8084 125.926 42.8175 125.929C42.8243 125.931 42.8078 125.927 42.7866 125.906L43.4974 125.202ZM42.7187 124.919H42.0539V125.919H42.7187V124.919ZM41.5539 125.419V126.385H42.5539V125.419H41.5539ZM44.1441 125.419H43.6441V125.919H44.1441V125.419ZM44.1441 125.107V124.607H43.6441V125.107H44.1441ZM46.3259 125.107H46.8259V124.607H46.3259V125.107ZM46.3259 125.419V125.919H46.8259V125.419H46.3259ZM45.4112 125.419V124.919H44.9112V125.419H45.4112ZM45.4112 128.016V128.516H45.9112V128.016H45.4112ZM45.0589 128.016H44.5589V128.516H45.0589V128.016ZM45.0589 125.419H45.5589V124.919H45.0589V125.419ZM44.6441 125.419V125.107H43.6441V125.419H44.6441ZM44.1441 125.607H46.3259V124.607H44.1441V125.607ZM45.8259 125.107V125.419H46.8259V125.107H45.8259ZM46.3259 124.919H45.4112V125.919H46.3259V124.919ZM44.9112 125.419V128.016H45.9112V125.419H44.9112ZM45.4112 127.516H45.0589V128.516H45.4112V127.516ZM45.5589 128.016V125.419H44.5589V128.016H45.5589ZM45.0589 124.919H44.1441V125.919H45.0589V124.919ZM49.1764 125.107H49.6764V124.607H49.1764V125.107ZM49.1764 128.016V128.516H49.6764V128.016H49.1764ZM48.8355 128.016L48.4248 128.301L48.5739 128.516H48.8355V128.016ZM47.2503 125.732L47.6611 125.447L47.5119 125.232H47.2503V125.732ZM47.2219 125.732V125.232H46.7219V125.732H47.2219ZM47.2219 128.016V128.516H47.7219V128.016H47.2219ZM46.8696 128.016H46.3696V128.516H46.8696V128.016ZM46.8696 125.107V124.607H46.3696V125.107H46.8696ZM47.2105 125.107L47.6211 124.821L47.472 124.607H47.2105V125.107ZM48.8014 127.396L48.3908 127.682L48.54 127.896H48.8014V127.396ZM48.8298 127.396V127.896H49.3298V127.396H48.8298ZM48.8298 125.107V124.607H48.3298V125.107H48.8298ZM48.6764 125.107V128.016H49.6764V125.107H48.6764ZM49.1764 127.516H48.8355V128.516H49.1764V127.516ZM49.2463 127.731L47.6611 125.447L46.8395 126.017L48.4248 128.301L49.2463 127.731ZM47.2503 125.232H47.2219V126.232H47.2503V125.232ZM46.7219 125.732V128.016H47.7219V125.732H46.7219ZM47.2219 127.516H46.8696V128.516H47.2219V127.516ZM47.3696 128.016V125.107H46.3696V128.016H47.3696ZM46.8696 125.607H47.2105V124.607H46.8696V125.607ZM46.7999 125.392L48.3908 127.682L49.212 127.111L47.6211 124.821L46.7999 125.392ZM48.8014 127.896H48.8298V126.896H48.8014V127.896ZM49.3298 127.396V125.107H48.3298V127.396H49.3298ZM48.8298 125.607H49.1764V124.607H48.8298V125.607Z"
        fill={darkMode ? "white" : "black"}
        mask="url(#path-17-outside-1_17_66)"
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      />
      <motion.mask
        id="path-19-outside-2_17_66"
        maskUnits="userSpaceOnUse"
        x="76.3364"
        y="124.016"
        width="10"
        height="5"
        fill="black"
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      >
        <motion.rect
          fill="white"
          x="76.3364"
          y="124.016"
          width="10"
          height="5"
        />
        <motion.path
          d="M77.6887 128.016V125.107H78.7057C78.9084 125.107 79.0755 125.142 79.2072 125.212C79.3388 125.281 79.4368 125.374 79.5012 125.492C79.5656 125.608 79.5978 125.737 79.5978 125.879C79.5978 126.004 79.5755 126.108 79.531 126.189C79.4875 126.27 79.4297 126.335 79.3577 126.382C79.2867 126.43 79.2095 126.465 79.1262 126.487V126.516C79.2152 126.521 79.3047 126.553 79.3947 126.609C79.4846 126.666 79.5599 126.748 79.6205 126.854C79.6811 126.96 79.7114 127.09 79.7114 127.243C79.7114 127.389 79.6783 127.52 79.612 127.636C79.5457 127.753 79.4411 127.845 79.2981 127.913C79.1551 127.982 78.969 128.016 78.7398 128.016H77.6887ZM78.041 127.703H78.7398C78.9699 127.703 79.1333 127.659 79.2299 127.57C79.3274 127.48 79.3762 127.371 79.3762 127.243C79.3762 127.145 79.3511 127.054 79.3009 126.97C79.2507 126.886 79.1792 126.819 79.0864 126.769C78.9936 126.717 78.8838 126.692 78.7569 126.692H78.041V127.703ZM78.041 126.385H78.6944C78.8004 126.385 78.8961 126.364 78.9813 126.323C79.0675 126.281 79.1357 126.222 79.1859 126.146C79.237 126.071 79.2626 125.982 79.2626 125.879C79.2626 125.752 79.2181 125.643 79.129 125.554C79.04 125.464 78.8989 125.419 78.7057 125.419H78.041V126.385ZM80.1312 125.419V125.107H82.313V125.419H81.3982V128.016H81.0459V125.419H80.1312ZM85.1635 125.107V128.016H84.8226L83.2373 125.732H83.2089V128.016H82.8567V125.107H83.1976L84.7885 127.396H84.8169V125.107H85.1635Z"
          strokeLinecap="round"
          initial={{ pathLength: 0 }}
          animate={{ pathLength: 1 }}
        />
      </motion.mask>
      <motion.path
        d="M77.6887 128.016H77.1887V128.516H77.6887V128.016ZM77.6887 125.107V124.607H77.1887V125.107H77.6887ZM79.2072 125.212L78.9722 125.653L78.9747 125.654L79.2072 125.212ZM79.5012 125.492L79.0628 125.732L79.0636 125.734L79.5012 125.492ZM79.531 126.189L79.0923 125.949L79.0901 125.953L79.531 126.189ZM79.3577 126.382L79.0829 125.965L79.0804 125.966L79.3577 126.382ZM79.1262 126.487L78.9946 126.005L78.6262 126.105V126.487H79.1262ZM79.1262 126.516H78.6262V126.985L79.0943 127.015L79.1262 126.516ZM79.3947 126.609L79.1277 127.032L79.1277 127.032L79.3947 126.609ZM79.612 127.636L80.0465 127.884L80.0465 127.884L79.612 127.636ZM79.2981 127.913L79.0829 127.462L79.0829 127.462L79.2981 127.913ZM78.041 127.703H77.541V128.203H78.041V127.703ZM79.2299 127.57L79.5687 127.937L79.5689 127.937L79.2299 127.57ZM79.3009 126.97L78.8713 127.226L78.8726 127.228L79.3009 126.97ZM79.0864 126.769L78.8451 127.207L78.8486 127.208L79.0864 126.769ZM78.041 126.692V126.192H77.541V126.692H78.041ZM78.041 126.385H77.541V126.885H78.041V126.385ZM78.9813 126.323L78.7637 125.872L78.7617 125.873L78.9813 126.323ZM79.1859 126.146L78.7714 125.867L78.769 125.87L79.1859 126.146ZM79.129 125.554L78.7736 125.906L78.7755 125.908L79.129 125.554ZM78.041 125.419V124.919H77.541V125.419H78.041ZM78.1887 128.016V125.107H77.1887V128.016H78.1887ZM77.6887 125.607H78.7057V124.607H77.6887V125.607ZM78.7057 125.607C78.8545 125.607 78.9342 125.633 78.9722 125.653L79.4421 124.77C79.2169 124.651 78.9623 124.607 78.7057 124.607V125.607ZM78.9747 125.654C79.0292 125.683 79.0508 125.71 79.0628 125.732L79.9396 125.251C79.8228 125.038 79.6483 124.879 79.4396 124.769L78.9747 125.654ZM79.0636 125.734C79.0843 125.771 79.0978 125.816 79.0978 125.879H80.0978C80.0978 125.659 80.0469 125.445 79.9388 125.25L79.0636 125.734ZM79.0978 125.879C79.0978 125.948 79.0851 125.962 79.0923 125.949L79.9698 126.429C80.066 126.253 80.0978 126.06 80.0978 125.879H79.0978ZM79.0901 125.953C79.086 125.961 79.0832 125.964 79.0828 125.965C79.0826 125.965 79.0825 125.965 79.0827 125.965C79.0829 125.965 79.083 125.964 79.0829 125.965L79.6325 126.8C79.7792 126.703 79.8919 126.574 79.9719 126.425L79.0901 125.953ZM79.0804 125.966C79.0546 125.983 79.0268 125.996 78.9946 126.005L79.2578 126.97C79.3923 126.933 79.5188 126.876 79.6351 126.798L79.0804 125.966ZM78.6262 126.487V126.516H79.6262V126.487H78.6262ZM79.0943 127.015C79.0908 127.015 79.0907 127.014 79.0952 127.015C79.1001 127.017 79.1109 127.022 79.1277 127.032L79.6617 126.187C79.5146 126.094 79.3453 126.029 79.158 126.017L79.0943 127.015ZM79.1277 127.032C79.1388 127.039 79.1603 127.056 79.1864 127.102L80.0546 126.606C79.9595 126.439 79.8304 126.293 79.6617 126.187L79.1277 127.032ZM79.1864 127.102C79.1941 127.115 79.2114 127.155 79.2114 127.243H80.2114C80.2114 127.025 80.1681 126.804 80.0546 126.606L79.1864 127.102ZM79.2114 127.243C79.2114 127.31 79.1971 127.355 79.1774 127.389L80.0465 127.884C80.1595 127.685 80.2114 127.468 80.2114 127.243H79.2114ZM79.1774 127.389C79.1704 127.402 79.1508 127.43 79.0829 127.462L79.5133 128.365C79.7313 128.261 79.921 128.104 80.0465 127.884L79.1774 127.389ZM79.0829 127.462C79.0302 127.487 78.9253 127.516 78.7398 127.516V128.516C79.0127 128.516 79.2799 128.476 79.5133 128.365L79.0829 127.462ZM78.7398 127.516H77.6887V128.516H78.7398V127.516ZM78.041 128.203H78.7398V127.203H78.041V128.203ZM78.7398 128.203C79.0092 128.203 79.3316 128.156 79.5687 127.937L78.8911 127.202C78.9162 127.179 78.9295 127.18 78.9035 127.187C78.8769 127.195 78.8252 127.203 78.7398 127.203V128.203ZM79.5689 127.937C79.7646 127.757 79.8762 127.516 79.8762 127.243H78.8762C78.8762 127.243 78.8762 127.24 78.8773 127.234C78.8785 127.229 78.8804 127.223 78.8833 127.216C78.8895 127.202 78.8955 127.198 78.8909 127.202L79.5689 127.937ZM79.8762 127.243C79.8762 127.055 79.8269 126.875 79.7292 126.712L78.8726 127.228C78.8749 127.232 78.8753 127.234 78.8754 127.234C78.8755 127.234 78.8762 127.237 78.8762 127.243H79.8762ZM79.7305 126.714C79.6307 126.547 79.4902 126.419 79.3243 126.329L78.8486 127.208C78.8683 127.219 78.8708 127.225 78.8713 127.226L79.7305 126.714ZM79.3277 126.331C79.1477 126.231 78.9515 126.192 78.7569 126.192V127.192C78.816 127.192 78.8395 127.203 78.8451 127.207L79.3277 126.331ZM78.7569 126.192H78.041V127.192H78.7569V126.192ZM77.541 126.692V127.703H78.541V126.692H77.541ZM78.041 126.885H78.6944V125.885H78.041V126.885ZM78.6944 126.885C78.8675 126.885 79.0396 126.851 79.2009 126.772L78.7617 125.873C78.7526 125.878 78.7334 125.885 78.6944 125.885V126.885ZM79.199 126.773C79.3615 126.694 79.5002 126.577 79.6027 126.423L78.769 125.87C78.769 125.87 78.7698 125.869 78.7708 125.868C78.7717 125.868 78.7701 125.869 78.7637 125.872L79.199 126.773ZM79.6003 126.426C79.7137 126.258 79.7626 126.069 79.7626 125.879H78.7626C78.7626 125.889 78.7614 125.89 78.7628 125.885C78.7635 125.883 78.7645 125.88 78.7661 125.876C78.7677 125.873 78.7696 125.869 78.7714 125.867L79.6003 126.426ZM79.7626 125.879C79.7626 125.621 79.667 125.385 79.4826 125.201L78.7755 125.908C78.7765 125.909 78.7754 125.908 78.7733 125.905C78.7711 125.901 78.7687 125.897 78.7666 125.892C78.7646 125.887 78.7634 125.883 78.7629 125.88C78.7623 125.877 78.7626 125.877 78.7626 125.879H79.7626ZM79.4845 125.202C79.2621 124.978 78.9634 124.919 78.7057 124.919V125.919C78.7656 125.919 78.7955 125.926 78.8046 125.929C78.8113 125.931 78.7948 125.927 78.7736 125.906L79.4845 125.202ZM78.7057 124.919H78.041V125.919H78.7057V124.919ZM77.541 125.419V126.385H78.541V125.419H77.541ZM80.1312 125.419H79.6312V125.919H80.1312V125.419ZM80.1312 125.107V124.607H79.6312V125.107H80.1312ZM82.313 125.107H82.813V124.607H82.313V125.107ZM82.313 125.419V125.919H82.813V125.419H82.313ZM81.3982 125.419V124.919H80.8982V125.419H81.3982ZM81.3982 128.016V128.516H81.8982V128.016H81.3982ZM81.0459 128.016H80.5459V128.516H81.0459V128.016ZM81.0459 125.419H81.5459V124.919H81.0459V125.419ZM80.6312 125.419V125.107H79.6312V125.419H80.6312ZM80.1312 125.607H82.313V124.607H80.1312V125.607ZM81.813 125.107V125.419H82.813V125.107H81.813ZM82.313 124.919H81.3982V125.919H82.313V124.919ZM80.8982 125.419V128.016H81.8982V125.419H80.8982ZM81.3982 127.516H81.0459V128.516H81.3982V127.516ZM81.5459 128.016V125.419H80.5459V128.016H81.5459ZM81.0459 124.919H80.1312V125.919H81.0459V124.919ZM85.1635 125.107H85.6635V124.607H85.1635V125.107ZM85.1635 128.016V128.516H85.6635V128.016H85.1635ZM84.8226 128.016L84.4118 128.301L84.561 128.516H84.8226V128.016ZM83.2373 125.732L83.6481 125.447L83.499 125.232H83.2373V125.732ZM83.2089 125.732V125.232H82.7089V125.732H83.2089ZM83.2089 128.016V128.516H83.7089V128.016H83.2089ZM82.8567 128.016H82.3567V128.516H82.8567V128.016ZM82.8567 125.107V124.607H82.3567V125.107H82.8567ZM83.1976 125.107L83.6082 124.821L83.459 124.607H83.1976V125.107ZM84.7885 127.396L84.3779 127.682L84.527 127.896H84.7885V127.396ZM84.8169 127.396V127.896H85.3169V127.396H84.8169ZM84.8169 125.107V124.607H84.3169V125.107H84.8169ZM84.6635 125.107V128.016H85.6635V125.107H84.6635ZM85.1635 127.516H84.8226V128.516H85.1635V127.516ZM85.2333 127.731L83.6481 125.447L82.8266 126.017L84.4118 128.301L85.2333 127.731ZM83.2373 125.232H83.2089V126.232H83.2373V125.232ZM82.7089 125.732V128.016H83.7089V125.732H82.7089ZM83.2089 127.516H82.8567V128.516H83.2089V127.516ZM83.3567 128.016V125.107H82.3567V128.016H83.3567ZM82.8567 125.607H83.1976V124.607H82.8567V125.607ZM82.787 125.392L84.3779 127.682L85.1991 127.111L83.6082 124.821L82.787 125.392ZM84.7885 127.896H84.8169V126.896H84.7885V127.896ZM85.3169 127.396V125.107H84.3169V127.396H85.3169ZM84.8169 125.607H85.1635V124.607H84.8169V125.607Z"
        fill={darkMode ? "white" : "black"}
        mask="url(#path-19-outside-2_17_66)"
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      />
    </svg>
  );
};

export const OFandSFFabric = () => {
  const { darkMode } = useContext(DarkmodeContext);
  return (
    <div className="mt-3 ml-[7px]">
      <svg
        width="292"
        height="100"
        viewBox="0 0 292 100"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <motion.rect
          x="0.526316"
          y="61.5789"
          width="80"
          height="37.8947"
          rx="7.89474"
          stroke-width="1.05263"
          stroke-dasharray="2.11 2.11"
          stroke={darkMode ? "white" : "black"}
          initial={{ pathLength: 0 }}
          animate={{ pathLength: 1 }}
        />
        <motion.rect
          x="105.789"
          y="61.5789"
          width="80"
          height="37.8947"
          rx="7.89474"
          stroke-width="1.05263"
          stroke={darkMode ? "white" : "black"}
          strokeLinecap="round"
          initial={{ pathLength: 0 }}
          animate={{ pathLength: 1 }}
        />
        <motion.path
          d="M38.9474 57.8942C42.1053 41.5789 135.789 52.6316 144.737 40C201.579 57.8942 233.684 40.527 251.053 56.3163"
          stroke={darkMode ? "white" : "black"}
          stroke-width="1.05263"
          initial={{ pathLength: 0 }}
          animate={{ pathLength: 1 }}
        />
        <motion.path
          d="M146.316 40V55.7895"
          stroke={darkMode ? "white" : "black"}
          stroke-width="1.05263"
          initial={{ pathLength: 0 }}
          animate={{ pathLength: 1 }}
        />
        <motion.path
          d="M44.7368 62.1053C44.7368 64.7214 42.6161 66.8422 40 66.8422C37.3839 66.8422 35.2631 64.7214 35.2631 62.1053C35.2631 59.4892 37.3839 57.3685 40 57.3685C42.6161 57.3685 44.7368 59.4892 44.7368 62.1053Z"
          fill={darkMode ? "#292929" : "#E7E7E7"}
          stroke={darkMode ? "white" : "black"}
          stroke-width="1.05263"
          initial={{ pathLength: 0 }}
          animate={{ pathLength: 1 }}
        />
        <motion.rect
          x="211.053"
          y="61.5789"
          width="80"
          height="37.8947"
          rx="7.89474"
          stroke-width="1.05263"
          stroke-dasharray="2.11 2.11"
          stroke={darkMode ? "white" : "black"}
          strokeLinecap="round"
          initial={{ pathLength: 0 }}
          animate={{ pathLength: 1 }}
        />
        <motion.path
          d="M151.053 61.0526C151.053 63.6687 148.932 65.7894 146.316 65.7894C143.7 65.7894 141.579 63.6687 141.579 61.0526C141.579 58.4365 143.7 56.3157 146.316 56.3157C148.932 56.3157 151.053 58.4365 151.053 61.0526Z"
          fill={darkMode ? "#292929" : "#E7E7E7"}
          stroke={darkMode ? "white" : "black"}
          stroke-width="1.05263"
          initial={{ pathLength: 0 }}
          animate={{ pathLength: 1 }}
        />
        <motion.path
          d="M119 72.1053C119 73.1517 118.152 74 117.105 74C116.059 74 115.211 73.1517 115.211 72.1053C115.211 71.0588 116.059 70.2105 117.105 70.2105C118.152 70.2105 119 71.0588 119 72.1053Z"
          fill="white"
          stroke="black"
          stroke-width="0.421053"
          initial={{ pathLength: 0 }}
          animate={{ pathLength: 1 }}
        />
        <motion.path
          d="M119 78.4211C119 79.4675 118.152 80.3158 117.105 80.3158C116.059 80.3158 115.211 79.4675 115.211 78.4211C115.211 77.3746 116.059 76.5263 117.105 76.5263C118.152 76.5263 119 77.3746 119 78.4211Z"
          fill="white"
          stroke="black"
          stroke-width="0.421053"
          initial={{ pathLength: 0 }}
          animate={{ pathLength: 1 }}
        />
        <motion.path
          d="M119 84.7369C119 85.7833 118.152 86.6316 117.105 86.6316C116.059 86.6316 115.211 85.7833 115.211 84.7369C115.211 83.6904 116.059 82.8421 117.105 82.8421C118.152 82.8421 119 83.6904 119 84.7369Z"
          fill="white"
          stroke="black"
          stroke-width="0.421053"
          initial={{ pathLength: 0 }}
          animate={{ pathLength: 1 }}
        />
        <motion.path
          d="M119 91.0527C119 92.0991 118.152 92.9474 117.105 92.9474C116.059 92.9474 115.211 92.0991 115.211 91.0527C115.211 90.0062 116.059 89.1579 117.105 89.1579C118.152 89.1579 119 90.0062 119 91.0527Z"
          fill="white"
          stroke="black"
          stroke-width="0.421053"
          initial={{ pathLength: 0 }}
          animate={{ pathLength: 1 }}
        />
        <motion.g
          filter="url(#filter0_d_44_38)"
          initial={{ offsetDistance: "0%", scale: 2.5 }}
          animate={{ offsetDistance: "100%", scale: 1 }}
        >
          <motion.rect
            x="105.789"
            y="0.526316"
            width="80"
            height="37.8947"
            rx="7.89474"
            stroke-width="1.05263"
            stroke-dasharray="2.11 2.11"
            shape-rendering="crispEdges"
            stroke={darkMode ? "white" : "black"}
            strokeLinecap="round"
            initial={{ pathLength: 0 }}
            animate={{ pathLength: 1 }}
          />
        </motion.g>
        <motion.path
          d="M151.053 38.9474C151.053 41.5634 148.932 43.6842 146.316 43.6842C143.7 43.6842 141.579 41.5634 141.579 38.9474C141.579 36.3313 143.7 34.2105 146.316 34.2105C148.932 34.2105 151.053 36.3313 151.053 38.9474Z"
          fill={darkMode ? "#292929" : "#E7E7E7"}
          stroke={darkMode ? "white" : "black"}
          stroke-width="1.05263"
          initial={{ pathLength: 0 }}
          animate={{ pathLength: 1 }}
        />
        <motion.path
          d="M256.316 61.0526C256.316 63.6687 254.195 65.7894 251.579 65.7894C248.963 65.7894 246.842 63.6687 246.842 61.0526C246.842 58.4365 248.963 56.3157 251.579 56.3157C254.195 56.3157 256.316 58.4365 256.316 61.0526Z"
          fill={darkMode ? "#292929" : "#E7E7E7"}
          stroke={darkMode ? "white" : "black"}
          stroke-width="1.05263"
          initial={{ pathLength: 0 }}
          animate={{ pathLength: 1 }}
        />
        <motion.line
          x1="122.368"
          y1="71.8948"
          x2="177.105"
          y2="71.8948"
          stroke={darkMode ? "white" : "black"}
          strokeLinecap="round"
          initial={{ pathLength: 0 }}
          animate={{ pathLength: 1 }}
          stroke-width="0.421053"
        />
        <motion.line
          x1="122.368"
          y1="78.2105"
          x2="177.105"
          y2="78.2105"
          stroke={darkMode ? "white" : "black"}
          strokeLinecap="round"
          initial={{ pathLength: 0 }}
          animate={{ pathLength: 1 }}
          stroke-width="0.421053"
        />
        <motion.line
          x1="122.368"
          y1="71.8948"
          x2="177.105"
          y2="71.8948"
          stroke={darkMode ? "white" : "black"}
          strokeLinecap="round"
          initial={{ pathLength: 0 }}
          animate={{ pathLength: 1 }}
          stroke-width="0.421053"
        />
        <motion.line
          x1="122.368"
          y1="84.5264"
          x2="177.105"
          y2="84.5264"
          stroke={darkMode ? "white" : "black"}
          strokeLinecap="round"
          initial={{ pathLength: 0 }}
          animate={{ pathLength: 1 }}
          stroke-width="0.421053"
        />
        <motion.line
          x1="122.368"
          y1="90.8421"
          x2="177.105"
          y2="90.8421"
          stroke={darkMode ? "white" : "black"}
          strokeLinecap="round"
          initial={{ pathLength: 0 }}
          animate={{ pathLength: 1 }}
          stroke-width="0.421053"
        />
        <defs>
          <filter
            id="filter0_d_44_38"
            x="101.053"
            y="0"
            width="89.4737"
            height="47.3684"
            filterUnits="userSpaceOnUse"
            color-interpolation-filters="sRGB"
          >
            <feFlood flood-opacity="0" result="BackgroundImageFix" />
            <feColorMatrix
              in="SourceAlpha"
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
              result="hardAlpha"
            />
            <feOffset dy="4.21053" />
            <feGaussianBlur stdDeviation="2.10526" />
            <feComposite in2="hardAlpha" operator="out" />
            <feColorMatrix
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"
            />
            <feBlend
              mode="normal"
              in2="BackgroundImageFix"
              result="effect1_dropShadow_44_38"
            />
            <feBlend
              mode="normal"
              in="SourceGraphic"
              in2="effect1_dropShadow_44_38"
              result="shape"
            />
          </filter>
        </defs>
      </svg>
    </div>
  );
};

export const DataFabricsDefault = () => {
  const { darkMode } = useContext(DarkmodeContext);
  return (
    <svg
      width="300"
      height="150"
      viewBox="0 0 167 127"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <motion.rect
        x="111.5"
        y="65.5"
        width="55"
        height="61"
        stroke={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
        // transition={{
        //   duration: 2,
        //   yoyo: Infinity,
        //   ease: "easeInOut",
        //   iterations: Infinity,
        //   repeat: Infinity,
        //   repeatType: "loop",
        //   repeatDelay: 1,
        // }}
      />
      <motion.line
        x1="119"
        y1="79.5"
        x2="158.013"
        y2="79.5"
        stroke={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      />
      <motion.line
        x1="119"
        y1="92.5"
        x2="158.013"
        y2="92.5"
        stroke={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      />
      <motion.line
        x1="119"
        y1="107.5"
        x2="158.013"
        y2="107.5"
        stroke={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      />
      <motion.path
        d="M1.45825 31.0251H78.5416M1.45825 46.8167H78.5416M52.8541 15.2126V62.6084M27.1458 15.2126V62.6084M1.45825 15.2126H78.5416M1.45825 1.39172V62.6063H78.5416V1.39172H1.45825Z"
        stroke={darkMode ? "white" : "black"}
        initial={{ offsetDistance: "0%", scale: 2.5 }}
        animate={{ offsetDistance: "100%", scale: 1 }}
        // transition={{
        //   duration: 2,
        //   ease: "easeInOut",
        //   iterations: Infinity,
        // }}
      />
      <motion.path
        d="M92.1437 62.3519C92.0157 62.4253 91.9121 62.5348 91.8461 62.6667C91.78 62.7986 91.7543 62.9471 91.7721 63.0935L92.9055 75.2566C92.978 75.8471 93.6764 76.1224 94.1321 75.7399L96.2643 73.9504L97.3368 75.8081C97.9536 76.8763 99.1923 76.9886 100.26 76.3718C101.329 75.755 101.851 74.6263 101.234 73.5581L100.165 71.707L102.74 70.7702C103.299 70.5667 103.41 69.8245 102.935 69.4664L92.9676 62.4032C92.8504 62.315 92.7098 62.2631 92.5633 62.254C92.4169 62.2449 92.271 62.2789 92.1437 62.3519ZM93.4754 64.6631L100.928 69.8332L97.9712 70.9091L97.985 70.9306L99.935 74.3081C100.149 74.6791 99.8816 74.8586 99.5105 75.0728C99.1394 75.287 98.8502 75.4291 98.636 75.0581L96.686 71.6806L96.6705 71.6509L94.2264 73.7024L93.4754 64.6631Z"
        fill={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      />
    </svg>
  );
};

export const ProcessFlowDefault = () => {
  const { darkMode } = useContext(DarkmodeContext);
  return (
    <svg
      width="124"
      height="91"
      viewBox="0 0 124 91"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <motion.rect
        x="0.5"
        y="0.5"
        width="48"
        height="37"
        rx="7.5"
        stroke={darkMode ? "white" : "black"}
      />
      <motion.path
        d="M19 14H17C16.4696 14 15.9609 14.2107 15.5858 14.5858C15.2107 14.9609 15 15.4696 15 16V24H17V20H19V24H21V16C21 15.4696 20.7893 14.9609 20.4142 14.5858C20.0391 14.2107 19.5304 14 19 14ZM19 18H17V16H19M26 14H22V24H24V20H26C26.5304 20 27.0391 19.7893 27.4142 19.4142C27.7893 19.0391 28 18.5304 28 18V16C28 15.4696 27.7893 14.9609 27.4142 14.5858C27.0391 14.2107 26.5304 14 26 14ZM26 18H24V16H26M32 16V22H33V24H29V22H30V16H29V14H33V16H32Z"
        fill={darkMode ? "white" : "black"}
        initial={{ offsetDistance: "0%", scale: 2.5 }}
        animate={{ offsetDistance: "100%", scale: 1 }}
        // transition={{
        //   duration: 2,
        //   ease: "easeInOut",
        //   iterations: Infinity,
        // }}
      />
      <motion.path
        d="M51.1437 19.3519C51.0157 19.4253 50.9121 19.5348 50.8461 19.6667C50.78 19.7986 50.7543 19.9471 50.7721 20.0935L51.9055 32.2566C51.978 32.8471 52.6764 33.1224 53.1321 32.7399L55.2643 30.9504L56.3368 32.8081C56.9536 33.8763 58.1923 33.9886 59.2603 33.3718C60.3288 32.755 60.8508 31.6263 60.234 30.5581L59.1652 28.707L61.7398 27.7702C62.2989 27.5667 62.4097 26.8245 61.9345 26.4664L51.9676 19.4032C51.8504 19.315 51.7098 19.2631 51.5633 19.254C51.4169 19.2449 51.271 19.2789 51.1437 19.3519ZM52.4754 21.6631L59.9281 26.8332L56.9712 27.9091L56.985 27.9306L58.935 31.3081C59.1492 31.6791 58.8816 31.8586 58.5105 32.0728C58.1394 32.287 57.8502 32.4291 57.636 32.0581L55.686 28.6806L55.6705 28.6509L53.2264 30.7024L52.4754 21.6631Z"
        fill={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      />
      <motion.rect
        x="68.5"
        y="29.5"
        width="55"
        height="61"
        stroke={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
        // transition={{
        //   duration: 2,
        //   yoyo: Infinity,
        //   ease: "easeInOut",
        //   iterations: Infinity,
        //   repeat: Infinity,
        //   repeatType: "loop",
        //   repeatDelay: 1,
        // }}
      />
      <motion.line
        x1="76"
        y1="43.5"
        x2="115.013"
        y2="43.5"
        stroke={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      />
      <motion.line
        x1="76"
        y1="56.5"
        x2="115.013"
        y2="56.5"
        stroke={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      />
      <motion.line
        x1="76"
        y1="71.5"
        x2="115.013"
        y2="71.5"
        stroke={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      />
    </svg>
  );
};

export const UserFabricDefault = () => {
  const { darkMode } = useContext(DarkmodeContext);
  return (
    <svg
      width="225"
      height="115"
      viewBox="0 0 225 115"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <motion.rect
        x="169.5"
        y="53.5"
        width="55"
        height="61"
        stroke={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
        // transition={{
        //   duration: 2,
        //   yoyo: Infinity,
        //   ease: "easeInOut",
        //   iterations: Infinity,
        //   repeat: Infinity,
        //   repeatType: "loop",
        //   repeatDelay: 1,
        // }}
      />
      <motion.line
        x1="177"
        y1="67.5"
        x2="216.013"
        y2="67.5"
        stroke={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      />
      <motion.line
        x1="177"
        y1="80.5"
        x2="216.013"
        y2="80.5"
        stroke={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      />
      <motion.line
        x1="177"
        y1="95.5"
        x2="216.013"
        y2="95.5"
        stroke={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      />
      <motion.path
        d="M189.377 27.0994C189.249 27.1727 189.146 27.2822 189.079 27.4141C189.013 27.546 188.988 27.6945 189.006 27.841L190.139 40.004C190.211 40.5946 190.91 40.8698 191.365 40.4873L193.498 38.6978L194.57 40.5556C195.187 41.6237 196.426 41.7361 197.494 41.1193C198.562 40.5025 199.084 39.3737 198.467 38.3056L197.399 36.4544L199.973 35.5177C200.532 35.3141 200.643 34.5719 200.168 34.2139L190.201 27.1507C190.084 27.0624 189.943 27.0106 189.797 27.0014C189.65 26.9923 189.504 27.0264 189.377 27.0994ZM190.709 29.4106L194.435 31.9956L198.162 34.5806L195.205 35.6566L195.218 35.678L197.168 39.0556C197.383 39.4265 197.115 39.6061 196.744 39.8203C196.373 40.0345 196.084 40.1765 195.869 39.8056L193.919 36.428L193.904 36.3983L191.46 38.4499L190.709 29.4106Z"
        fill={darkMode ? "white" : "black"}
      />
      <motion.rect
        x="14.5"
        y="8.5"
        width="38"
        height="5"
        stroke={darkMode ? "white" : "black"}
      />
      <motion.rect
        x="62.5"
        y="8.5"
        width="38"
        height="5"
        stroke={darkMode ? "white" : "black"}
      />
      <motion.rect
        x="114.5"
        y="8.5"
        width="38"
        height="5"
        stroke={darkMode ? "white" : "black"}
      />
      <motion.circle
        cx="189"
        cy="11"
        r="7.5"
        stroke={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      />
      <motion.path
        d="M10.5 0.5H199.5C205.023 0.5 209.5 4.97715 209.5 10.5C209.5 16.0228 205.023 20.5 199.5 20.5H10.5C4.97715 20.5 0.5 16.0228 0.5 10.5C0.5 4.97715 4.97715 0.5 10.5 0.5Z"
        stroke={darkMode ? "white" : "black"}
        strokeLinecap="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
        // transition={{
        //   duration: 2,
        //   yoyo: Infinity,
        //   ease: "easeInOut",
        //   iterations: Infinity,
        //   repeat: Infinity,
        //   repeatType: "loop",
        //   repeatDelay: 1,
        // }}
      />
    </svg>
  );
};

export const SvgDarkmode = () => {
  return (
    <svg
      width="25"
      height="23"
      viewBox="0 0 30 30"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M0 10C0 4.47715 4.47715 0 10 0H20C25.5228 0 30 4.47715 30 10V20C30 25.5228 25.5228 30 20 30H0V10Z"
        fill="white"
      />
      <path
        d="M19.8306 17.9009H18.8143L18.4541 17.5536C19.7584 16.0408 20.4753 14.1094 20.4738 12.1119C20.4738 10.4581 19.9834 8.8414 19.0646 7.46629C18.1458 6.09118 16.8398 5.01941 15.3119 4.38652C13.784 3.75362 12.1026 3.58803 10.4806 3.91068C8.85854 4.23332 7.36859 5.02972 6.19915 6.19915C5.02972 7.36859 4.23332 8.85854 3.91068 10.4806C3.58803 12.1026 3.75362 13.784 4.38652 15.3119C5.01941 16.8398 6.09118 18.1458 7.46629 19.0646C8.8414 19.9834 10.4581 20.4738 12.1119 20.4738C14.1831 20.4738 16.0871 19.7148 17.5536 18.4541L17.9009 18.8143V19.8306L24.3332 26.25L26.25 24.3332L19.8306 17.9009ZM12.1119 17.9009C8.90866 17.9009 6.3229 15.3152 6.3229 12.1119C6.3229 8.90866 8.90866 6.3229 12.1119 6.3229C15.3152 6.3229 17.9009 8.90866 17.9009 12.1119C17.9009 15.3152 15.3152 17.9009 12.1119 17.9009Z"
        fill="#2B2B2B"
      />
    </svg>
  );
};

export const SvgLightmode = () => {
  return (
    <svg
      width="25"
      height="23"
      viewBox="0 0 30 30"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M0 10C0 4.47715 4.47715 0 10 0H20C25.5228 0 30 4.47715 30 10V20C30 25.5228 25.5228 30 20 30H0V10Z"
        fill="#3b82f6"
      />
      <path
        d="M20.1527 18.0943H19.0686L18.6844 17.7238C20.0756 16.1102 20.8403 14.05 20.8388 11.9194C20.8388 10.1553 20.3157 8.43083 19.3356 6.96404C18.3555 5.49726 16.9625 4.35404 15.3327 3.67895C13.7029 3.00386 11.9095 2.82723 10.1793 3.17139C8.44911 3.51554 6.85983 4.36503 5.61243 5.61243C4.36503 6.85983 3.51554 8.44911 3.17139 10.1793C2.82723 11.9095 3.00386 13.7029 3.67895 15.3327C4.35404 16.9625 5.49726 18.3555 6.96404 19.3356C8.43083 20.3157 10.1553 20.8388 11.9194 20.8388C14.1286 20.8388 16.1595 20.0292 17.7238 18.6844L18.0943 19.0686V20.1527L24.9554 27L27 24.9554L20.1527 18.0943ZM11.9194 18.0943C8.50258 18.0943 5.74443 15.3362 5.74443 11.9194C5.74443 8.50258 8.50258 5.74443 11.9194 5.74443C15.3362 5.74443 18.0943 8.50258 18.0943 11.9194C18.0943 15.3362 15.3362 18.0943 11.9194 18.0943Z"
        fill="#c7c5c5"
      />
    </svg>
  );
};

export const SourceIcon = () => {
  const { darkMode } = useContext(DarkmodeContext);

  return (
    <ImMoveUp
      size={25}
      className={
        darkMode
          ? " text-zinc-100 font-bolder cursor-pointer"
          : "text-[#3F3F46] font-bolder  cursor-pointer"
      }
    />
  );
};

export const MapperIcon = () => {
  const { darkMode } = useContext(DarkmodeContext);
  return (
    <LiaSitemapSolid
      size={20}
      className={
        darkMode
          ? " text-zinc-100 font-bolder cursor-pointer"
          : "text-[#3F3F46] font-bolder  cursor-pointer"
      }
    />
  );
};

export const RulesIcon = () => {
  const { darkMode } = useContext(DarkmodeContext);

  return (
    <svg
      width="25"
      height="25"
      viewBox="0 0 32 32"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M18 14H30V16H18V14ZM18 19H26V21H18V19ZM18 9H30V11H18V9Z"
        fill={darkMode ? "#F4F4F5" : "#3F3F46"}
      />
      <path
        d="M22 24V28H6V16H14V14H10V8.00001C9.99898 7.08025 10.315 6.18824 10.8947 5.47421C11.4745 4.76018 12.2826 4.26776 13.183 4.07989C14.0833 3.89202 15.0209 4.02017 15.8379 4.44277C16.6548 4.86537 17.3011 5.55659 17.668 6.40001L19.5 5.60001C18.9482 4.33708 17.9785 3.30258 16.7538 2.67036C15.5291 2.03813 14.1242 1.84672 12.775 2.12828C11.4259 2.40984 10.2148 3.14722 9.34519 4.2165C8.47562 5.28578 8.00062 6.62179 8 8.00001V14H6C5.46957 14 4.96086 14.2107 4.58579 14.5858C4.21071 14.9609 4 15.4696 4 16V28C4 28.5304 4.21071 29.0392 4.58579 29.4142C4.96086 29.7893 5.46957 30 6 30H22C22.5304 30 23.0391 29.7893 23.4142 29.4142C23.7893 29.0392 24 28.5304 24 28V24H22Z"
        fill={darkMode ? "#F4F4F5" : "#3F3F46"}
      />
    </svg>
  );
};

export const CustomCode = () => {
  const { darkMode } = useContext(DarkmodeContext);
  return (
    <LuFileCode2
      size={20}
      className={
        darkMode
          ? " text-zinc-100 font-bolder cursor-pointer"
          : "text-[#3F3F46] font-bolder  cursor-pointer"
      }
    />
  );
};

export const Validation = () => {
  const { darkMode } = useContext(DarkmodeContext);
  return (
    <GrValidate
      size={20}
      className={
        darkMode
          ? " text-zinc-100 font-bolder cursor-pointer"
          : "text-[#3F3F46] font-bolder  cursor-pointer"
      }
    />
  );
};

export const Security = () => {
  const { darkMode } = useContext(DarkmodeContext);
  return (
    <MdOutlineSecurity
      size={20}
      className={
        darkMode
          ? " text-zinc-100 font-bolder cursor-pointer"
          : "text-[#3F3F46] font-bolder  cursor-pointer"
      }
    />
  );
};

export const Documents = () => {
  const { darkMode } = useContext(DarkmodeContext);
  return (
    <GrDocumentStore
      size={20}
      className={
        darkMode
          ? " text-zinc-100 font-bolder cursor-pointer"
          : "text-[#3F3F46] font-bolder  cursor-pointer"
      }
    />
  );
};

export const Execution = () => {
  const { darkMode } = useContext(DarkmodeContext);
  return (
    <SiSecurityscorecard
      size={20}
      className={
        darkMode
          ? " text-zinc-100 font-bolder cursor-pointer"
          : "text-[#3F3F46] font-bolder  cursor-pointer"
      }
    />
  );
};

export const ElementInfo = () => {
  const { darkMode } = useContext(DarkmodeContext);
  return (
    <SiElement
      size={20}
      className={
        darkMode
          ? " text-zinc-100 font-bolder cursor-pointer"
          : "text-[#3F3F46] font-bolder  cursor-pointer"
      }
    />
  );
};

export const Enities = () => {
  const { darkMode } = useContext(DarkmodeContext);
  return (
    <svg
      width="30"
      height="30"
      viewBox="0 0 30 30"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M26 10.2965C26 11.0321 25.0762 11.3601 24.6124 10.7892V10.7892C24.4993 10.6499 24.4375 10.476 24.4375 10.2965V5.79807C24.4375 4.69351 23.5421 3.79808 22.4375 3.79808H20.1875C19.0829 3.79808 18.1875 4.69351 18.1875 5.79808V10.7091C18.1875 11.1406 17.8377 11.4904 17.4062 11.4904V11.4904C16.9748 11.4904 16.625 11.1406 16.625 10.7091V5.79808C16.625 4.69351 15.7296 3.79808 14.625 3.79808H12.375C11.2704 3.79808 10.375 4.69351 10.375 5.79808V22.9519C10.375 24.0565 11.2704 24.9519 12.375 24.9519H14.625C15.7296 24.9519 16.625 24.0565 16.625 22.9519V18.0409C16.625 17.6094 16.9748 17.2596 17.4062 17.2596V17.2596C17.8377 17.2596 18.1875 17.6094 18.1875 18.0409V22.9519C18.1875 24.0565 19.0829 24.9519 20.1875 24.9519H22.4375C23.5421 24.9519 24.4375 24.0565 24.4375 22.9519V18.4535C24.4375 18.274 24.4993 18.1001 24.6124 17.9608V17.9608C25.0762 17.3899 26 17.7179 26 18.4535V24.875C26 25.9796 25.1046 26.875 24 26.875H3C1.89543 26.875 1 25.9796 1 24.875V3.875C1 2.77043 1.89543 1.875 3 1.875H24C25.1046 1.875 26 2.77043 26 3.875V10.2965ZM8.8125 13.4904C8.8125 12.3858 7.91707 11.4904 6.8125 11.4904H4.5625C3.45793 11.4904 2.5625 12.3858 2.5625 13.4904V15.2596C2.5625 16.3642 3.45793 17.2596 4.5625 17.2596H6.8125C7.91707 17.2596 8.8125 16.3642 8.8125 15.2596V13.4904ZM6.8125 24.9519C7.91707 24.9519 8.8125 24.0565 8.8125 22.9519V21.1827C8.8125 20.0781 7.91707 19.1827 6.8125 19.1827H4.5625C3.45793 19.1827 2.5625 20.0781 2.5625 21.1827V22.9519C2.5625 24.0565 3.45793 24.9519 4.5625 24.9519H6.8125ZM8.8125 5.79808C8.8125 4.69351 7.91707 3.79808 6.8125 3.79808H4.5625C3.45793 3.79808 2.5625 4.69351 2.5625 5.79808V7.56731C2.5625 8.67188 3.45793 9.56731 4.5625 9.56731H6.8125C7.91707 9.56731 8.8125 8.67188 8.8125 7.56731V5.79808ZM20.2227 18.3221C19.9684 18.0092 19.9678 17.5611 20.2211 17.2475L20.3384 17.1021C20.9111 16.3929 20.4063 15.3365 19.4948 15.3365H14.4615C13.9305 15.3365 13.5 14.906 13.5 14.375V14.375C13.5 13.844 13.9305 13.4135 14.4615 13.4135H19.4948C20.4063 13.4135 20.9111 12.3571 20.3384 11.6479L20.2211 11.5025C19.9678 11.1889 19.9684 10.7408 20.2227 10.4279V10.4279C20.5643 10.0074 21.2062 10.0074 21.5478 10.4279L23.7302 13.1138C24.3272 13.8486 24.3272 14.9014 23.7302 15.6362L21.5478 18.3221C21.2062 18.7426 20.5643 18.7426 20.2227 18.3221V18.3221Z"
        fill={darkMode ? "#F4F4F5" : "#3F3F46"}
      />
    </svg>
  );
};

export const Enumeration = () => {
  const { darkMode } = useContext(DarkmodeContext);
  return (
    <svg
      width="25"
      height="23"
      viewBox="0 0 25 23"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <circle
        cx="2.5"
        cy="2.5"
        r="2.5"
        fill={darkMode ? "#F4F4F5" : "#3F3F46"}
      />
      <circle
        cx="2.5"
        cy="11.5"
        r="2.5"
        fill={darkMode ? "#F4F4F5" : "#3F3F46"}
      />
      <circle
        cx="2.5"
        cy="20.5"
        r="2.5"
        fill={darkMode ? "#F4F4F5" : "#3F3F46"}
      />
      <rect
        x="7.23682"
        y="1.41937"
        width="17.7632"
        height="3.22581"
        rx="1.6129"
        fill={darkMode ? "#F4F4F5" : "#3F3F46"}
      />
      <rect
        x="7.23682"
        y="10.2903"
        width="17.7632"
        height="3.22581"
        rx="1.6129"
        fill={darkMode ? "#F4F4F5" : "#3F3F46"}
      />
      <rect
        x="7.23682"
        y="19.1613"
        width="17.7632"
        height="3.22581"
        rx="1.6129"
        fill={darkMode ? "#F4F4F5" : "#3F3F46"}
      />
    </svg>
  );
};

export const ProcessObject = () => {
  const { darkMode } = useContext(DarkmodeContext);
  return (
    <svg
      width="25"
      height="25"
      viewBox="0 0 25 25"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M3.11729 6.47169V8.34169C3.11729 8.85594 2.76312 9.27669 2.33025 9.27669H1.54321V13.0167H2.33025C2.76312 13.0167 3.11729 13.4374 3.11729 13.9517V15.8217C3.11729 17.3644 4.17979 18.6267 5.4784 18.6267H7.83951V16.7567H5.4784C5.04553 16.7567 4.69136 16.3359 4.69136 15.8217V13.9517C4.69136 12.7362 4.03025 11.689 3.11729 11.3056V10.9877C4.03025 10.6044 4.69136 9.55719 4.69136 8.34169V6.47169C4.69136 5.95744 5.04553 5.53669 5.4784 5.53669H7.83951V3.66669H5.4784C4.17979 3.66669 3.11729 4.92894 3.11729 6.47169ZM16.4969 9.27669C16.064 9.27669 15.7099 8.85594 15.7099 8.34169V6.47169C15.7099 4.92894 14.6474 3.66669 13.3488 3.66669H10.9877V5.53669H13.3488C13.7816 5.53669 14.1358 5.95744 14.1358 6.47169V8.34169C14.1358 9.55719 14.7969 10.6044 15.7099 10.9877V11.3056C14.7969 11.689 14.1358 12.7268 14.1358 13.9517V15.8217C14.1358 16.3359 13.7816 16.7567 13.3488 16.7567H10.9877V18.6267H13.3488C14.6474 18.6267 15.7099 17.3644 15.7099 15.8217V13.9517C15.7099 13.4374 16.064 13.0167 16.4969 13.0167H17.284V9.27669H16.4969Z"
        fill={darkMode ? "#F4F4F5" : "#3F3F46"}
      />
      <path
        d="M18.0555 21.25C17.9328 21.25 17.815 21.3027 17.7282 21.3964C17.6414 21.4902 17.5926 21.6174 17.5926 21.75V22.641C16.9959 21.9122 16.6665 20.9729 16.6667 20C16.6665 19.8529 16.6745 19.706 16.6907 19.56C16.6996 19.494 16.6961 19.4269 16.6805 19.3624C16.665 19.2979 16.6376 19.2374 16.6001 19.1845C16.5626 19.1316 16.5157 19.0873 16.4621 19.0542C16.4085 19.0212 16.3494 19 16.2881 18.992C16.2268 18.984 16.1647 18.9894 16.1054 19.0077C16.0461 19.026 15.9907 19.0569 15.9426 19.0986C15.8945 19.1404 15.8546 19.1921 15.8253 19.2507C15.7959 19.3093 15.7777 19.3737 15.7717 19.44C15.7508 19.6258 15.7405 19.8128 15.7407 20C15.7414 21.1931 16.1384 22.3463 16.8597 23.25H16.2037C16.0809 23.25 15.9631 23.3027 15.8763 23.3964C15.7895 23.4902 15.7407 23.6174 15.7407 23.75C15.7407 23.8826 15.7895 24.0098 15.8763 24.1036C15.9631 24.1973 16.0809 24.25 16.2037 24.25H18.0555C18.1279 24.249 18.1991 24.2293 18.263 24.1926C18.327 24.1559 18.3818 24.1032 18.4231 24.039C18.4282 24.0315 18.4352 24.0255 18.4403 24.0175C18.4435 24.0125 18.4435 24.0065 18.4463 24.0015C18.4683 23.9613 18.4849 23.9178 18.4954 23.8725C18.5023 23.847 18.5073 23.8209 18.5102 23.7945C18.5116 23.7795 18.5185 23.766 18.5185 23.75V21.75C18.5185 21.6174 18.4697 21.4902 18.3829 21.3964C18.2961 21.3027 18.1783 21.25 18.0555 21.25ZM18.75 17H17.9245C18.5995 16.3555 19.4694 15.9998 20.3704 16C20.5065 15.9997 20.6426 16.0085 20.7778 16.0265C20.8997 16.0424 21.0226 16.0053 21.1193 15.9234C21.2159 15.8415 21.2785 15.7215 21.2933 15.5898C21.308 15.458 21.2737 15.3253 21.1978 15.2209C21.122 15.1165 21.0109 15.0489 20.8889 15.033C20.7168 15.0107 20.5437 14.9996 20.3704 15C19.2656 15.0007 18.1978 15.4295 17.3611 16.2085V15.5C17.3611 15.3674 17.3123 15.2402 17.2255 15.1465C17.1387 15.0527 17.0209 15 16.8981 15C16.7753 15 16.6576 15.0527 16.5708 15.1465C16.4839 15.2402 16.4352 15.3674 16.4352 15.5V17.5C16.438 17.5331 16.4441 17.5658 16.4532 17.5975C16.4644 17.6592 16.4866 17.718 16.5185 17.7705L16.5241 17.779C16.5546 17.827 16.5929 17.8686 16.637 17.902C16.6421 17.906 16.6449 17.912 16.65 17.916C16.6565 17.921 16.6639 17.9225 16.6708 17.9265C16.6972 17.9436 16.7251 17.9577 16.7542 17.9685C16.7931 17.9832 16.8338 17.9921 16.875 17.995C16.8833 17.995 16.8898 18 16.8981 18H18.75C18.8728 18 18.9905 17.9473 19.0773 17.8536C19.1642 17.7598 19.2129 17.6326 19.2129 17.5C19.2129 17.3674 19.1642 17.2402 19.0773 17.1465C18.9905 17.0527 18.8728 17 18.75 17ZM24.287 22.402C24.2758 22.3405 24.2537 22.2819 24.2217 22.2295L24.2166 22.221C24.186 22.173 24.1476 22.1313 24.1032 22.098C24.0981 22.094 24.0958 22.088 24.0903 22.084C24.0856 22.0805 24.0796 22.0805 24.0745 22.077C24.0158 22.0416 23.9514 22.0186 23.8847 22.009C23.8699 22.0075 23.8574 22 23.8426 22H21.9907C21.8679 22 21.7502 22.0527 21.6634 22.1464C21.5765 22.2402 21.5278 22.3674 21.5278 22.5C21.5278 22.6326 21.5765 22.7598 21.6634 22.8536C21.7502 22.9473 21.8679 23 21.9907 23H22.8157C22.1409 23.6444 21.2712 24.0001 20.3704 24C20.2342 24.0002 20.0981 23.9911 19.9629 23.973C19.841 23.9571 19.7181 23.9942 19.6214 24.0761C19.5248 24.158 19.4622 24.278 19.4474 24.4097C19.4327 24.5415 19.467 24.6742 19.5429 24.7786C19.6187 24.883 19.7298 24.9506 19.8518 24.9665C20.0239 24.9888 20.1971 25 20.3704 25C21.4751 24.9993 22.5429 24.5705 23.3796 23.7915V24.5C23.3796 24.6326 23.4284 24.7598 23.5152 24.8536C23.602 24.9473 23.7198 25 23.8426 25C23.9654 25 24.0831 24.9473 24.1699 24.8536C24.2568 24.7598 24.3055 24.6326 24.3055 24.5V22.5C24.3025 22.4669 24.2963 22.4337 24.287 22.402ZM24.537 16.75C24.6598 16.75 24.7776 16.6973 24.8644 16.6036C24.9512 16.5098 25 16.3826 25 16.25C25 16.1174 24.9512 15.9902 24.8644 15.8965C24.7776 15.8027 24.6598 15.75 24.537 15.75H22.6852C22.655 15.7532 22.6252 15.7597 22.5963 15.7695L22.593 15.77C22.5369 15.7823 22.4835 15.806 22.4356 15.84L22.4264 15.8465C22.3821 15.8795 22.3437 15.9209 22.3129 15.9685C22.3092 15.9735 22.3037 15.9765 22.3 15.982C22.2967 15.987 22.2967 15.9935 22.2935 15.999C22.2605 16.0629 22.2391 16.133 22.2305 16.2055C22.2292 16.2205 22.2222 16.234 22.2222 16.25V18.25C22.2222 18.3826 22.271 18.5098 22.3578 18.6036C22.4446 18.6973 22.5624 18.75 22.6852 18.75C22.808 18.75 22.9257 18.6973 23.0125 18.6036C23.0994 18.5098 23.1481 18.3826 23.1481 18.25V17.3585C23.7448 18.0875 24.0742 19.027 24.0741 20C24.0741 20.1471 24.0659 20.294 24.0495 20.44C24.0349 20.5716 24.0692 20.7041 24.1448 20.8084C24.2205 20.9127 24.3314 20.9804 24.4532 20.9965C24.472 20.9989 24.4908 21 24.5097 21C24.6227 20.9998 24.7318 20.9549 24.8163 20.8739C24.9008 20.7928 24.9549 20.6812 24.9685 20.56C24.9896 20.3742 25.0001 20.1872 25 20C24.9993 18.8069 24.6023 17.6537 23.881 16.75H24.537Z"
        fill={darkMode ? "#F4F4F5" : "#3F3F46"}
      />
    </svg>
  );
};

export const RaiseAndListenIcon = () => {
  const { darkMode } = useContext(DarkmodeContext);
  return (
    <svg
      width="25"
      height="25"
      viewBox="0 0 25 26"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g clip-path="url(#clip0_34_2)">
        <path
          d="M11.5058 0H13.4328V2.28816H11.5058V0ZM15.3597 0H17.2866V2.28816H15.3597V0ZM7.65198 0H9.57891V2.28816H7.65198V0ZM21.1405 9.15264H13.4328L13.3814 6.76834H11.5058V9.15264H3.79812C3.28706 9.15264 2.79694 9.39371 2.43557 9.82283C2.0742 10.2519 1.87119 10.8339 1.87119 11.4408V18.3053H3.79812V11.4408H11.5058V18.3053H13.4328V11.4408H21.1405V18.3053H23.0674V11.4408C23.0674 10.8339 22.8644 10.2519 22.503 9.82283C22.1417 9.39371 21.6516 9.15264 21.1405 9.15264ZM0.907721 20.5934C2.01716 19.4864 3.65215 19.4864 4.76158 20.5934C5.97188 21.8011 5.97188 23.9621 4.76158 25.1698C3.65215 26.2767 2.01716 26.2767 0.907721 25.1698C-0.302574 23.9621 -0.302574 21.8011 0.907721 20.5934ZM10.5424 20.5934H14.3962V25.1698H10.5424V20.5934ZM20.177 20.5934C21.3091 19.5617 22.8989 19.5617 24.0309 20.5934C25.323 21.7711 25.323 23.9921 24.0309 25.1698C22.8989 26.2015 21.3091 26.2015 20.177 25.1698C18.8849 23.9921 18.8849 21.7711 20.177 20.5934Z"
          fill={darkMode ? "#F4F4F5" : "#3F3F46"}
        />
        <path
          d="M12.8078 5.99781C13.1241 5.90362 13.4013 5.70936 13.5977 5.44422C13.7942 5.17908 13.8992 4.85738 13.8972 4.52744C13.8972 3.68402 13.226 2.99891 12.3972 2.99891C11.5685 2.99891 10.8972 3.68314 10.8972 4.52744C10.8972 5.22655 11.3574 5.81609 11.9866 5.99891L12.3035 4.12355L11.5066 4.71857L11.4596 4.67089L12.3972 3.37372L13.3347 4.67089L13.2879 4.71769L12.491 4.12355L12.8078 5.99781Z"
          fill={darkMode ? "#F4F4F5" : "#3F3F46"}
        />
      </g>
      <defs>
        <clipPath id="clip0_34_2">
          <rect width="25" height="26" fill="white" />
        </clipPath>
      </defs>
    </svg>
  );
};

export const RiseIcon = () => {
  const { darkMode } = useContext(DarkmodeContext);
  return (
    <svg
      width="25"
      height="25"
      viewBox="0 0 25 25"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g clip-path="url(#clip0_36_2)">
        <path
          fill-rule="evenodd"
          clip-rule="evenodd"
          d="M12.5 25C5.59609 25 0 19.4039 0 12.5C0 5.59609 5.59609 0 12.5 0C19.4039 0 25 5.59609 25 12.5C25 19.4039 19.4039 25 12.5 25ZM9.84766 7.15234C10.518 7.15234 11.0609 6.60078 11.0609 5.92031C11.0609 5.23984 10.518 4.6875 9.84766 4.6875C9.17813 4.6875 8.63516 5.23906 8.63516 5.92031C8.63516 6.60156 9.17813 7.15234 9.84766 7.15234ZM15.193 20.3125C15.8633 20.3125 16.4062 19.7609 16.4062 19.0797C16.4062 18.4 15.8633 17.8477 15.193 17.8477C14.5234 17.8477 13.9805 18.3992 13.9805 19.0797C13.9805 19.7609 14.5234 20.3125 15.193 20.3125ZM10.3453 11.1016L15.9375 6.75781C16.1677 6.57705 16.3179 6.31329 16.3558 6.02309C16.3938 5.73289 16.3165 5.43937 16.1406 5.20547C16.0549 5.09029 15.9471 4.99338 15.8234 4.92045C15.6997 4.84751 15.5628 4.8 15.4205 4.78072C15.2782 4.76143 15.1335 4.77076 14.9949 4.80815C14.8563 4.84553 14.7266 4.91023 14.6133 4.99844L9.02188 9.34375C8.7918 9.52438 8.64161 9.78793 8.6035 10.0779C8.56539 10.368 8.64237 10.6614 8.81797 10.8953C8.90367 11.0105 9.01152 11.1074 9.13518 11.1803C9.25884 11.2533 9.39583 11.3008 9.5381 11.3201C9.68037 11.3393 9.82505 11.33 9.96367 11.2926C10.1023 11.2552 10.232 11.1898 10.3453 11.1016ZM10.3867 15.5305L15.9781 11.1852C16.2082 11.0045 16.3584 10.741 16.3965 10.451C16.4346 10.1609 16.3576 9.86753 16.182 9.63359C16.0963 9.51841 15.9885 9.42151 15.8648 9.34857C15.7412 9.27563 15.6042 9.22813 15.4619 9.20884C15.3196 9.18956 15.1749 9.19888 15.0363 9.23627C14.8977 9.27366 14.768 9.33835 14.6547 9.42656L9.0625 13.7719C8.83232 13.9526 8.68214 14.2164 8.64417 14.5066C8.60619 14.7968 8.68345 15.0903 8.85938 15.3242C8.94508 15.4394 9.05293 15.5363 9.17659 15.6092C9.30025 15.6822 9.43724 15.7297 9.5795 15.749C9.72177 15.7683 9.86646 15.7589 10.0051 15.7215C10.1437 15.6842 10.2734 15.6187 10.3867 15.5305ZM10.3867 20.0844L15.9781 15.7391C16.2082 15.5584 16.3584 15.2949 16.3965 15.0049C16.4346 14.7148 16.3576 14.4214 16.182 14.1875C16.0963 14.0723 15.9885 13.9754 15.8648 13.9025C15.7412 13.8295 15.6042 13.782 15.4619 13.7627C15.3196 13.7435 15.1749 13.7528 15.0363 13.7902C14.8977 13.8276 14.768 13.8923 14.6547 13.9805L9.0625 18.3258C8.83232 18.5065 8.68214 18.7703 8.64417 19.0605C8.60619 19.3507 8.68345 19.6442 8.85938 19.8781C8.94508 19.9933 9.05293 20.0902 9.17659 20.1631C9.30025 20.2361 9.43724 20.2836 9.5795 20.3029C9.72177 20.3222 9.86646 20.3128 10.0051 20.2754C10.1437 20.2381 10.2734 20.1726 10.3867 20.0844Z"
          fill={darkMode ? "#F4F4F5" : "#3F3F46"}
        />
      </g>
      <defs>
        <clipPath id="clip0_36_2">
          <rect
            width="25"
            height="25"
            fill={darkMode ? "#F4F4F5" : "#3F3F46"}
          />
        </clipPath>
      </defs>
    </svg>
  );
};

export const SelfIcon = () => {
  const { darkMode } = useContext(DarkmodeContext);

  return (
    <svg
      width="25"
      height="25"
      viewBox="0 0 25 11"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M6.88892 9.79234V8.74302L7.62134 8.692C7.72187 9.35713 7.83965 9.62369 8.304 9.62735C8.77812 9.62735 9.22573 9.38379 9.22573 8.66309C9.22573 7.94239 8.38725 7.69776 7.92139 7.42872C7.45552 7.15967 6.9185 6.80191 6.9185 6.00762C6.9185 5.21334 7.72114 4.76192 8.32759 4.71739C8.93403 4.67286 9.07056 4.71563 9.81655 4.87823V5.89581L9.2728 5.92022C9.15122 5.32159 8.91421 5.06607 8.47339 5.06607C8.03257 5.06607 7.63564 5.35211 7.62134 5.88033C7.60703 6.40855 7.93403 6.60523 8.60264 6.99127C9.27129 7.3773 9.90869 7.62066 9.90684 8.57974C9.87295 9.58804 9.1563 9.99083 8.34834 9.99083C7.77036 9.99083 7.38276 9.92467 6.88892 9.79234ZM11.2375 8.17286C11.3233 8.77564 11.6276 9.52232 12.4112 9.52085C13.1948 9.51939 13.6019 8.86622 13.7025 8.692L14.0233 8.93399C13.8309 9.32266 13.2195 10.0938 12.1801 10.0938C11.1407 10.0938 10.424 9.1313 10.424 7.72881C10.424 7.03414 10.9391 5.92022 12.2063 5.92022C13.4735 5.92022 13.6926 7.20284 13.8076 7.6044L11.2375 8.17286ZM12.9432 7.4129C12.801 6.98878 12.5676 6.21934 11.8686 6.32398C11.1695 6.42862 11.0897 7.26216 11.1624 7.80362L12.9432 7.4129ZM15.4312 9.21124C15.4312 9.69239 15.7145 9.69317 15.8586 9.73174V9.93482H14.3521V9.7317C14.4661 9.68814 14.7845 9.70201 14.7845 9.21124V5.22208C14.7756 5.02461 14.7459 4.79356 14.2779 4.79356V4.50953H15.4312M18.9545 5.23692H18.5495C18.5276 5.19908 18.502 4.84918 18.1044 4.85445C17.7069 4.85972 17.5667 5.22427 17.5667 5.77481V6.30474H18.446V6.70552H17.5667V9.21124C17.5667 9.67525 17.8291 9.70215 17.9999 9.73174V9.93482H16.4609V9.7317C16.6347 9.68516 16.883 9.67613 16.883 9.21124V6.70557H16.4428V6.50855C17.0493 6.41202 16.7346 6.26548 16.9869 5.45855C17.2392 4.65162 17.9378 4.50958 18.4389 4.50958C18.9399 4.50958 18.9545 4.53638 18.9545 4.53638L18.9545 5.23692ZM4.00239 8.51758L3.54243 7.82022L6.49517 8.84405L3.88369 10.6097L4.18042 9.77882C-5.89541 9.29503 4.10639 2.83301 14.5188 0.988043C24.9313 -0.856928 29.2008 1.75289 19.7627 6.29986L20.1015 5.44615L19.2871 5.12061C28.2324 0.37564 19.3167 -0.0407169 11.7075 1.91963C4.09819 3.87999 -2.43091 7.92569 4.00239 8.51758Z"
        fill={darkMode ? "#F4F4F5" : "#3F3F46"}
      />
    </svg>
  );
};

export const RoleNodeIcon = () => {
  const { darkMode } = useContext(DarkmodeContext);
  return (
    <svg
      width="28"
      height="28"
      viewBox="0 0 28 28"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M2.87313 12.4667C3.50024 12.8367 3.90329 13.4692 3.90329 14.1667C3.90329 14.8642 3.50024 15.4967 2.87313 15.8667C2.44755 16.1204 2.17178 16.3217 1.97688 16.5617C1.76487 16.8222 1.60939 17.1196 1.5193 17.4368C1.42922 17.754 1.4063 18.0849 1.45186 18.4104C1.5208 18.9029 1.82972 19.4079 2.44622 20.4167C3.06537 21.4254 3.37429 21.9292 3.79192 22.2329C4.06827 22.4328 4.38367 22.5794 4.72013 22.6644C5.05658 22.7493 5.40748 22.7709 5.7528 22.7279C6.07099 22.6879 6.39316 22.5654 6.83864 22.3429C7.15744 22.1784 7.51536 22.0931 7.87878 22.0948C8.2422 22.0966 8.59918 22.1854 8.91618 22.3529C9.55655 22.7029 9.93706 23.3467 9.96357 24.0442C9.98213 24.5192 10.0299 24.8442 10.1532 25.1229C10.2864 25.4265 10.4818 25.7022 10.7282 25.9345C10.9746 26.1668 11.2671 26.351 11.589 26.4767C12.0756 26.6667 12.6934 26.6667 13.9291 26.6667C15.1647 26.6667 15.7826 26.6667 16.2691 26.4767C16.5911 26.351 16.8836 26.1668 17.13 25.9345C17.3763 25.7022 17.5717 25.4265 17.705 25.1229C17.827 24.8442 17.876 24.5192 17.8946 24.0442C17.9211 23.3467 18.3016 22.7017 18.942 22.3529C19.259 22.1854 19.616 22.0966 19.9794 22.0948C20.3428 22.0931 20.7007 22.1784 21.0195 22.3429C21.465 22.5654 21.7885 22.6879 22.1067 22.7279C22.8036 22.8143 23.5085 22.6363 24.0662 22.2329C24.4839 21.9304 24.7928 21.4254 25.4106 20.4167C25.6864 19.9667 25.8998 19.6179 26.0589 19.3254M24.985 15.8679C24.6746 15.6901 24.4172 15.4407 24.2371 15.1434C24.0569 14.846 23.9598 14.5104 23.9549 14.1679C23.9549 13.4692 24.3579 12.8367 24.985 12.4654C25.4106 12.2129 25.6851 12.0117 25.8813 11.7717C26.0933 11.5111 26.2488 11.2138 26.3389 10.8966C26.4289 10.5793 26.4519 10.2485 26.4063 9.92294C26.3373 9.43044 26.0284 8.92544 25.4119 7.91669C24.7928 6.90794 24.4839 6.40419 24.0662 6.10044C23.7899 5.90055 23.4745 5.75395 23.138 5.66902C22.8016 5.58409 22.4507 5.56248 22.1054 5.60544C21.7872 5.64544 21.465 5.76794 21.0182 5.99044C20.6996 6.15471 20.3419 6.23997 19.9787 6.23822C19.6156 6.23647 19.2588 6.14777 18.942 5.98044C18.6297 5.80532 18.3697 5.55824 18.1865 5.2624C18.0033 4.96656 17.9028 4.63167 17.8946 4.28919C17.876 3.81419 17.8283 3.48919 17.705 3.21044C17.5717 2.90691 17.3763 2.63113 17.13 2.39884C16.8836 2.16656 16.5911 1.98233 16.2691 1.85669C15.7826 1.66669 15.1647 1.66669 13.9291 1.66669C12.6934 1.66669 12.0756 1.66669 11.589 1.85669C11.2671 1.98233 10.9746 2.16656 10.7282 2.39884C10.4818 2.63113 10.2864 2.90691 10.1532 3.21044C10.0312 3.48919 9.98213 3.81419 9.96357 4.28919C9.95531 4.63167 9.85486 4.96656 9.67165 5.2624C9.48843 5.55824 9.22847 5.80532 8.91618 5.98044C8.59918 6.14799 8.2422 6.23681 7.87878 6.23856C7.51536 6.24031 7.15744 6.15493 6.83864 5.99044C6.39316 5.76794 6.06966 5.64544 5.75147 5.60544C5.05452 5.51902 4.34969 5.69707 3.79192 6.10044C3.37561 6.40419 3.06537 6.90794 2.44755 7.91669C2.17178 8.36669 1.95832 8.71544 1.79922 9.00794"
        stroke={darkMode ? "white" : "black"}
        stroke-width="1.5"
        stroke-linecap="round"
      />
      <path
        d="M7.33337 18C7.33337 17.1159 7.68456 16.2681 8.30968 15.6429C8.93481 15.0178 9.78265 14.6666 10.6667 14.6666H17.5C18.3841 14.6666 19.0653 15.0178 19.6904 15.6429C20.3155 16.2681 20.6667 17.1159 20.6667 18C20.6667 18.442 20.4911 18.8659 20.1786 19.1785C19.866 19.491 19.4421 19.6666 19 19.6666H9.00004C8.55801 19.6666 8.13409 19.491 7.82153 19.1785C7.50897 18.8659 7.33337 18.442 7.33337 18Z"
        stroke={darkMode ? "white" : "black"}
        stroke-linejoin="round"
      />
      <path
        d="M14 11.3333C15.3807 11.3333 16.5 10.214 16.5 8.83331C16.5 7.4526 15.3807 6.33331 14 6.33331C12.6193 6.33331 11.5 7.4526 11.5 8.83331C11.5 10.214 12.6193 11.3333 14 11.3333Z"
        stroke={darkMode ? "white" : "black"}
      />
    </svg>
  );
};

export const RoleNameIcon = () => {
  const { darkMode } = useContext(DarkmodeContext);
  return (
    <svg
      width="27"
      height="27"
      viewBox="0 0 27 27"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M2.44405 11.8C3.07116 12.17 3.47421 12.8025 3.47421 13.5C3.47421 14.1975 3.07116 14.83 2.44405 15.2C2.01847 15.4537 1.7427 15.655 1.54781 15.895C1.3358 16.1555 1.18031 16.4529 1.09022 16.7701C1.00014 17.0873 0.977223 17.4182 1.02278 17.7438C1.09173 18.2363 1.40064 18.7413 2.01714 19.75C2.6363 20.7587 2.94521 21.2625 3.36284 21.5662C3.63919 21.7661 3.9546 21.9127 4.29105 21.9977C4.6275 22.0826 4.97841 22.1042 5.32372 22.0613C5.64191 22.0213 5.96409 21.8988 6.40956 21.6763C6.72836 21.5118 7.08629 21.4264 7.4497 21.4281C7.81312 21.4299 8.1701 21.5187 8.48711 21.6862C9.12747 22.0362 9.50798 22.68 9.5345 23.3775C9.55306 23.8525 9.60079 24.1775 9.72409 24.4562C9.85735 24.7598 10.0528 25.0356 10.2991 25.2678C10.5455 25.5001 10.838 25.6844 11.1599 25.81C11.6465 26 12.2643 26 13.5 26C14.7357 26 15.3535 26 15.8401 25.81C16.162 25.6844 16.4545 25.5001 16.7009 25.2678C16.9472 25.0356 17.1427 24.7598 17.2759 24.4562C17.3979 24.1775 17.4469 23.8525 17.4655 23.3775C17.492 22.68 17.8725 22.035 18.5129 21.6862C18.8299 21.5187 19.1869 21.4299 19.5503 21.4281C19.9137 21.4264 20.2716 21.5118 20.5904 21.6763C21.0359 21.8988 21.3594 22.0213 21.6776 22.0613C22.3746 22.1477 23.0794 21.9696 23.6372 21.5662C24.0548 21.2637 24.3637 20.7587 24.9815 19.75C25.2573 19.3 25.4708 18.9513 25.6299 18.6588M24.5559 15.2013C24.2455 15.0234 23.9882 14.7741 23.808 14.4767C23.6278 14.1793 23.5307 13.8437 23.5258 13.5013C23.5258 12.8025 23.9288 12.17 24.5559 11.7987C24.9815 11.5462 25.256 11.345 25.4522 11.105C25.6642 10.8445 25.8197 10.5471 25.9098 10.2299C25.9999 9.91266 26.0228 9.58182 25.9772 9.25625C25.9083 8.76375 25.5994 8.25875 24.9829 7.25C24.3637 6.24125 24.0548 5.7375 23.6372 5.43375C23.3608 5.23386 23.0454 5.08727 22.709 5.00233C22.3725 4.9174 22.0216 4.89579 21.6763 4.93875C21.3581 4.97875 21.0359 5.10125 20.5891 5.32375C20.2705 5.48802 19.9128 5.57328 19.5496 5.57153C19.1865 5.56978 18.8297 5.48108 18.5129 5.31375C18.2006 5.13863 17.9406 4.89155 17.7574 4.59571C17.5742 4.29987 17.4738 3.96499 17.4655 3.6225C17.4469 3.1475 17.3992 2.8225 17.2759 2.54375C17.1427 2.24023 16.9472 1.96444 16.7009 1.73215C16.4545 1.49987 16.162 1.31564 15.8401 1.19C15.3535 1 14.7357 1 13.5 1C12.2643 1 11.6465 1 11.1599 1.19C10.838 1.31564 10.5455 1.49987 10.2991 1.73215C10.0528 1.96444 9.85735 2.24023 9.72409 2.54375C9.60211 2.8225 9.55306 3.1475 9.5345 3.6225C9.52623 3.96499 9.42578 4.29987 9.24257 4.59571C9.05936 4.89155 8.7994 5.13863 8.48711 5.31375C8.1701 5.4813 7.81312 5.57013 7.4497 5.57188C7.08629 5.57363 6.72836 5.48824 6.40956 5.32375C5.96409 5.10125 5.64059 4.97875 5.32239 4.93875C4.62544 4.85234 3.92061 5.03038 3.36284 5.43375C2.94654 5.7375 2.6363 6.24125 2.01847 7.25C1.7427 7.7 1.52924 8.04875 1.37015 8.34125"
        stroke={darkMode ? "white" : "black"}
        stroke-width="1.5"
        stroke-linecap="round"
      />
      <path
        d="M14.1671 12.878C14.2741 12.786 14.4192 12.7344 14.5705 12.7344C14.7218 12.7344 14.8669 12.786 14.9739 12.878L16.9915 14.6127L21.0256 11.1438C21.0786 11.0983 21.1415 11.0621 21.2107 11.0374C21.2799 11.0127 21.3541 11 21.4291 11C21.504 11 21.5783 11.0126 21.6475 11.0373C21.7168 11.0619 21.7797 11.098 21.8327 11.1436C21.8857 11.1891 21.9278 11.2432 21.9565 11.3027C21.9852 11.3623 22 11.4261 22 11.4905C22 11.5549 21.9853 11.6187 21.9566 11.6783C21.928 11.7378 21.886 11.7919 21.833 11.8375L16.9915 16L15.5793 14.7858L14.1671 13.5717C14.0601 13.4797 14 13.3549 14 13.2248C14 13.0948 14.0601 12.97 14.1671 12.878Z"
        fill={darkMode ? "#F4F4F5" : "#3F3F46"}
      />
      <path
        d="M12 13.5C11.1159 13.5 8.37817 13.8512 7.75304 14.4763C7.12792 15.1014 6.77673 15.9493 6.77673 16.8333C6.77673 17.2754 6.95233 17.6993 7.26489 18.0118C7.57745 18.3244 8.00137 18.5 8.4434 18.5H18.4434C18.8854 18.5 19.3094 18.3244 19.6219 18.0118C19.9345 17.6993 20.1101 17.2754 20.1101 16.8333C20.1101 15.9493 19.6251 15.1251 19 14.5"
        stroke={darkMode ? "white" : "black"}
        stroke-linejoin="round"
      />
      <path
        d="M13.6667 11C15.0475 11 16.1667 9.88071 16.1667 8.5C16.1667 7.11929 15.0475 6 13.6667 6C12.286 6 11.1667 7.11929 11.1667 8.5C11.1667 9.88071 12.286 11 13.6667 11Z"
        stroke={darkMode ? "white" : "black"}
      />
    </svg>
  );
};

export const MainpageLoader = () => {
  const { darkMode } = useContext(DarkmodeContext);
  return (
    <>
      <div
        className={
          "w-[100%] h-[100vh] flex justify-center items-center" +
          (darkMode ? " bg-[#1D1D1D]" : " bg-[#E9E8E8]")
        }
      >
        <svg
          width="500"
          height="350"
          viewBox="0 0 3229 2454"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <motion.path
            d="M2528 549.606C2753.5 344.106 2914.5 298.106 3223 171.606"
            stroke="#00CE7C"
            stroke-width="30"
            transition={transition}
            initial={{ pathLength: 0 }}
            animate={{ pathLength: 1 }}
          />
          <motion.path
            d="M2276 347.605C2581.32 253.554 2799.3 232.501 3217 174.605"
            stroke="#00CE7C"
            stroke-width="30"
            transition={transition}
            initial={{ pathLength: 0 }}
            animate={{ pathLength: 1 }}
          />
          <motion.path
            d="M2269 343.105C2363 392.605 2478.5 466.105 2545 554.105"
            stroke="#00CE7C"
            stroke-width="25"
            transition={transition}
            initial={{ pathLength: 0 }}
            animate={{ pathLength: 1 }}
          />
          <motion.path
            d="M1058.43 888.433C1441.23 1405.18 1551.26 1814.06 1597.1 2452.61"
            stroke="#00CE7C"
            stroke-width="30"
            transition={transition}
            initial={{ pathLength: 0 }}
            animate={{ pathLength: 1 }}
          />
          <motion.path
            d="M2112.14 980.236C1766.76 1456.03 1643.19 1864.67 1601.82 2452.61"
            stroke="#00CE7C"
            stroke-width="30"
            transition={transition}
            initial={{ pathLength: 0 }}
            animate={{ pathLength: 1 }}
          />
          <motion.path
            d="M1686.88 524.754C1884.07 670.434 2045.62 848.678 2112.14 994.359"
            stroke="#00CE7C"
            stroke-width="30"
            transition={transition}
            initial={{ pathLength: 0 }}
            animate={{ pathLength: 1 }}
          />
          <motion.path
            d="M1058.43 906.087C1242.11 689.568 1360.18 635.835 1710.5 524.754"
            stroke="#00CE7C"
            stroke-width="30"
            transition={transition}
            initial={{ pathLength: 0 }}
            animate={{ pathLength: 1 }}
          />
          <motion.path
            d="M1053.82 178.321C1632.5 275.106 1935 630.106 2135 948.606"
            stroke="#009BC9"
            stroke-width="30"
            transition={transition}
            initial={{ pathLength: 0 }}
            animate={{ pathLength: 1 }}
          />
          <motion.path
            d="M1073 178.32L1687.51 178.32"
            stroke="#009BC9"
            stroke-width="30"
            transition={transition}
            initial={{ pathLength: 0 }}
            animate={{ pathLength: 1 }}
          />
          <motion.path
            d="M2128 935.605C2247.06 752.735 2398.15 631.496 2504 565.605"
            stroke="#009BC9"
            stroke-width="30"
            transition={transition}
            initial={{ pathLength: 0 }}
            animate={{ pathLength: 1 }}
          />
          <motion.path
            d="M1670 177.105C1997 233.605 2267.37 376.704 2486 564.105"
            stroke="#009BC9"
            stroke-width="30"
            transition={transition}
            initial={{ pathLength: 0 }}
            animate={{ pathLength: 1 }}
          />
          <motion.path
            d="M1025.36 860.186C1205.05 649.7 1346.53 588.604 1689.24 480.618"
            stroke="#3A73CF"
            stroke-width="30"
            transition={transition}
            initial={{ pathLength: 0 }}
            animate={{ pathLength: 1 }}
          />
          <motion.path
            d="M860 175.606C1231.06 226.421 1524.63 357.701 1675 478.606"
            stroke="#3A73CF"
            stroke-width="30"
            transition={transition}
            initial={{ pathLength: 0 }}
            animate={{ pathLength: 1 }}
          />
          <motion.path
            d="M1037.17 861.952C904.865 713.655 607.181 367.631 9.45011 176.964"
            stroke="#3A73CF"
            stroke-width="30"
            transition={transition}
            initial={{ pathLength: 0 }}
            animate={{ pathLength: 1 }}
          />
          <motion.line
            y1="177.853"
            x2="869.427"
            y2="177.853"
            stroke="#3A73CF"
            stroke-width="30"
            transition={transition}
            initial={{ pathLength: 0 }}
            animate={{ pathLength: 1 }}
          />
          <motion.path
            d="M2225 334.105C2472.5 231.105 2663.77 213.815 3014 160.605"
            stroke="#FFD300"
            stroke-width="30"
            transition={transition}
            initial={{ pathLength: 0 }}
            animate={{ pathLength: 1 }}
          />
          <motion.path
            d="M1792.5 169.606L3028.5 161.605"
            stroke="#FFD300"
            stroke-width="25"
            transition={transition}
            initial={{ pathLength: 0 }}
            animate={{ pathLength: 1 }}
          />
          <motion.path
            d="M1833.5 169.105C2003 198.605 2118 234.605 2240 320.105"
            stroke="#FFD300"
            stroke-width="30"
            transition={transition}
            initial={{ pathLength: 0 }}
            animate={{ pathLength: 1 }}
          />
        </svg>
      </div>
    </>
  );
};

export const Subloader = () => {
  return (
    <>
      <svg
        width="3272"
        height="2597"
        viewBox="0 0 3272 2597"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <motion.path
          d="M2321.34 528.124C2641.34 381.624 2863.84 315.124 3251.34 297.124"
          stroke="#3A73CF"
          stroke-width="57"
          transition={transition}
          initial={{ pathLength: 0 }}
          animate={{ pathLength: 1 }}
        />
        <motion.path
          d="M1263.34 1281.12C1263.34 1281.12 1468.97 1011.31 1673.34 906.123"
          stroke="#3A73CF"
          stroke-width="57"
          transition={transition}
          initial={{ pathLength: 0 }}
          animate={{ pathLength: 1 }}
        />
        <motion.path
          d="M24.3418 286.124C985.927 388.587 1744.39 840.53 2045.34 1281.12"
          stroke="#3A73CF"
          stroke-width="57"
          transition={transition}
          initial={{ pathLength: 0 }}
          animate={{ pathLength: 1 }}
        />
        <motion.path
          d="M1319.34 292.624C1822.84 308.624 2290.34 473.124 2594.34 656.624"
          stroke="#3A73CF"
          stroke-width="57"
          transition={transition}
          initial={{ pathLength: 0 }}
          animate={{ pathLength: 1 }}
        />
        <motion.path
          fill-rule="evenodd"
          clip-rule="evenodd"
          d="M3247.34 305.11L24.3421 306.154L24.334 281.154L3247.33 280.11L3247.34 305.11Z"
          stroke="#3A73CF"
          stroke-width="30"
          transition={transition}
          initial={{ pathLength: 0 }}
          animate={{ pathLength: 1 }}
        />
        <motion.path
          fill-rule="evenodd"
          clip-rule="evenodd"
          d="M3251.8 309.302C2023.93 777.96 1672.84 1945.8 1672.84 2580.62H1647.84C1647.84 1939.39 2002.09 759.534 3242.88 285.945L3251.8 309.302Z"
          stroke="#3A73CF"
          stroke-width="30"
          transition={transition}
          initial={{ pathLength: 0 }}
          animate={{ pathLength: 1 }}
        />
        <motion.path
          fill-rule="evenodd"
          clip-rule="evenodd"
          d="M19.9999 309.345C1286.04 778.304 1647.84 1946.75 1647.84 2581.62H1672.84C1672.84 1939.89 1307.53 759.603 28.6836 285.902L19.9999 309.345Z"
          stroke="#3A73CF"
          stroke-width="30"
          transition={transition}
          initial={{ pathLength: 0 }}
          animate={{ pathLength: 1 }}
        />
      </svg>
    </>
  );
};

export const SvgAddIcon = (props) => {
  const { darkMode } = useContext(DarkmodeContext);

  return (
    <svg
      className={
        darkMode
          ? `bg-transparent rounded-xl p-1 flex transition-ease-in-out duration-300 
                      items-center justify-center hover:scale-105 hover:bg-slate-700 cursor-pointer`
          : `bg-transparent rounded-xl p-1 flex transition-ease-in-out duration-300 
                      items-center justify-center hover:scale-105 hover:bg-slate-200 cursor-pointer`
      }
      height="33"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
      <g
        id="SVGRepo_tracerCarrier"
        stroke-linecap="round"
        stroke-linejoin="round"
      ></g>
      <g id="SVGRepo_iconCarrier">
        <path
          d="M9 12H15"
          stroke={darkMode ? "#D3D3D3" : "#000000"}
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
        ></path>
        <path
          d="M12 9L12 15"
          stroke={darkMode ? "#D3D3D3" : "#000000"}
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
        ></path>
        <path
          d="M3 12C3 4.5885 4.5885 3 12 3C19.4115 3 21 4.5885 21 12C21 19.4115 19.4115 21 12 21C4.5885 21 3 19.4115 3 12Z"
          stroke={darkMode ? "#D3D3D3" : "#000000"}
          stroke-width="2"
        ></path>
      </g>
    </svg>
  );
};

export const SvgDeleteIcon = (props) => {
  const { darkMode } = useContext(DarkmodeContext);

  return (
    <svg
      width="16px"
      viewBox="0 0 24 23"
      xmlns="http://www.w3.org/2000/svg"
      fill="#000000"
      {...props}
    >
      <g id="SVGRepo_bgCarrier" strokeWidth={0} />
      <g
        id="SVGRepo_tracerCarrier"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <g id="SVGRepo_iconCarrier">
        <g
          id="Page-1"
          stroke="none"
          strokeWidth={1}
          fill="none"
          fillRule="evenodd"
        >
          <g
            id="Dribbble-Light-Preview"
            transform="translate(-179.000000, -360.000000)"
            fill="rgba(0, 0, 0, 0.5)"
          >
            <g id="icons" transform="translate(56.000000, 160.000000)">
              <path
                d="M130.35,216 L132.45,216 L132.45,208 L130.35,208 L130.35,216 Z M134.55,216 L136.65,216 L136.65,208 L134.55,208 L134.55,216 Z M128.25,218 L138.75,218 L138.75,206 L128.25,206 L128.25,218 Z M130.35,204 L136.65,204 L136.65,202 L130.35,202 L130.35,204 Z M138.75,204 L138.75,200 L128.25,200 L128.25,204 L123,204 L123,206 L126.15,206 L126.15,220 L140.85,220 L140.85,206 L144,206 L144,204 L138.75,204 Z"
                id="delete-[#cccccc]"
              />
            </g>
          </g>
        </g>
      </g>
    </svg>
  );
};

export const SvgAddingIcon = () => {
  const { darkMode } = useContext(DarkmodeContext);

  return (
    <svg viewBox="0 0 24 24" width="14" fill="transparent">
      <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
      <g
        id="SVGRepo_tracerCarrier"
        stroke-linecap="round"
        stroke-linejoin="round"
      ></g>
      <g id="SVGRepo_iconCarrier">
        <path
          d="M3 10C3 8.34315 4.34315 7 6 7H14C15.6569 7 17 8.34315 17 10V18C17 19.6569 15.6569 21 14 21H6C4.34315 21 3 19.6569 3 18V10Z"
          stroke={darkMode ? "#D3D3D3" : "#ccc"}
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
        ></path>
        <path
          d="M10 14V11M10 14V17M10 14H13M10 14H7"
          stroke={darkMode ? "#D3D3D3" : "#ccc"}
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
        ></path>
        <path
          d="M7 3L18 3C19.6569 3 21 4.34315 21 6L21 17"
          stroke={darkMode ? "#D3D3D3" : "#ccc"}
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
        ></path>
      </g>
    </svg>
  );
};

export const SvgDeletingIcon = () => {
  const { darkMode } = useContext(DarkmodeContext);

  return (
    <svg
      width="15px"
      viewBox="0 0 24 23"
      version="1.1"
      xmlns="http://www.w3.org/2000/svg"
      fill={darkMode ? "#D3D3D3" : "#000000"}
    >
      <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
      <g
        id="SVGRepo_tracerCarrier"
        stroke-linecap="round"
        stroke-linejoin="round"
      ></g>
      <g id="SVGRepo_iconCarrier">
        <g
          id="Page-1"
          stroke="none"
          stroke-width="1"
          fill="none"
          fill-rule="evenodd"
        >
          <g
            id="Dribbble-Light-Preview"
            transform="translate(-179.000000, -360.000000)"
            fill={darkMode ? "#D3D3D3" : "#ccc"}
          >
            <g id="icons" transform="translate(56.000000, 160.000000)">
              <path
                d="M130.35,216 L132.45,216 L132.45,208 L130.35,208 L130.35,216 Z M134.55,216 L136.65,216 L136.65,208 L134.55,208 L134.55,216 Z M128.25,218 L138.75,218 L138.75,206 L128.25,206 L128.25,218 Z M130.35,204 L136.65,204 L136.65,202 L130.35,202 L130.35,204 Z M138.75,204 L138.75,200 L128.25,200 L128.25,204 L123,204 L123,206 L126.15,206 L126.15,220 L140.85,220 L140.85,206 L144,206 L144,204 L138.75,204 Z"
                id="delete-[#cccccc]"
              ></path>
            </g>
          </g>
        </g>
      </g>
    </svg>
  );
};

export const SvgApiCustomNode = ({ nodeColor }) => {
  const { darkMode } = useContext(DarkmodeContext);

  return (
    <svg
      fill={nodeColor || "#ccc"}
      height="26px"
      version="1.1"
      id="Capa_1"
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 511 511"
    >
      <g>
        <path
          fill={nodeColor || "#ccc"}
          d="M492.168,309.579l-17.626-10.177c2.96-14.723,4.458-29.466,4.458-43.902c0-14.646-1.474-29.403-4.384-43.946l17.552-10.134
c5.436-3.138,9.325-8.206,10.949-14.269s0.791-12.396-2.348-17.832l-48-83.139c-3.139-5.436-8.206-9.325-14.269-10.949
c-6.064-1.624-12.396-0.791-17.833,2.348l-17.566,10.142C380.912,68.2,354.798,53.092,327,43.692V23.5
C327,10.542,316.458,0,303.5,0h-96C194.542,0,184,10.542,184,23.5v20.193c-27.65,9.362-53.728,24.49-75.999,44.088L90.332,77.579
c-5.437-3.139-11.77-3.973-17.833-2.348c-6.063,1.625-11.13,5.513-14.269,10.949l-48,83.139
c-3.139,5.436-3.972,11.769-2.348,17.832s5.513,11.131,10.949,14.269l17.626,10.177C33.499,226.32,32,241.063,32,255.5
c0,14.644,1.474,29.401,4.384,43.945l-17.552,10.134c-11.222,6.479-15.08,20.879-8.602,32.102l48,83.139
c6.479,11.221,20.879,15.08,32.102,8.601l17.565-10.142c22.19,19.521,48.303,34.629,76.103,44.03V487.5
c0,12.958,10.542,23.5,23.5,23.5h96c12.958,0,23.5-10.542,23.5-23.5v-20.193c27.651-9.362,53.729-24.49,76-44.087l17.668,10.201
c11.221,6.479,25.623,2.62,32.102-8.601l48-83.139C507.248,330.458,503.39,316.058,492.168,309.579z M487.779,334.181l-48,83.138
c-2.343,4.06-7.552,5.455-11.611,3.111l-22.392-12.928c-2.845-1.643-6.43-1.242-8.842,0.989
c-22.893,21.173-50.437,37.148-79.653,46.199c-3.14,0.973-5.281,3.877-5.281,7.164V487.5c0,4.687-3.813,8.5-8.5,8.5h-96
c-4.687,0-8.5-3.813-8.5-8.5v-25.645c0-3.287-2.141-6.191-5.28-7.164c-29.396-9.107-56.974-25.062-79.755-46.139
c-1.421-1.315-3.25-1.995-5.095-1.995c-1.286,0-2.579,0.33-3.748,1.005L82.832,420.43c-4.06,2.343-9.268,0.948-11.611-3.111
l-48-83.138c-2.343-4.059-0.947-9.268,3.111-11.612l22.272-12.859c2.844-1.642,4.289-4.942,3.566-8.146
C48.739,286.357,47,270.858,47,255.5c0-15.1,1.765-30.584,5.247-46.022c0.722-3.203-0.723-6.504-3.566-8.145L26.332,188.43
c-1.966-1.135-3.372-2.968-3.96-5.161c-0.587-2.193-0.286-4.484,0.849-6.45l48-83.139c1.135-1.966,2.968-3.373,5.162-3.96
c2.192-0.588,4.484-0.286,6.45,0.849l22.392,12.928c2.846,1.644,6.43,1.242,8.842-0.989c22.894-21.173,50.437-37.148,79.653-46.199
c3.14-0.973,5.281-3.877,5.281-7.164V23.5c0-4.687,3.813-8.5,8.5-8.5h96c4.687,0,8.5,3.813,8.5,8.5v25.645
c0,3.287,2.141,6.191,5.28,7.164c29.395,9.106,56.973,25.061,79.755,46.139c2.412,2.232,5.997,2.633,8.843,0.99l22.29-12.869
c1.967-1.135,4.258-1.437,6.45-0.849c2.193,0.588,4.026,1.994,5.162,3.96l48,83.139c1.135,1.966,1.437,4.257,0.849,6.45
c-0.588,2.193-1.994,4.026-3.96,5.161l-22.272,12.859c-2.844,1.642-4.289,4.943-3.566,8.146c3.431,15.206,5.17,30.704,5.17,46.065
c0,15.1-1.765,30.584-5.247,46.021c-0.722,3.203,0.723,6.503,3.566,8.145l22.349,12.903
C488.727,324.913,490.123,330.122,487.779,334.181z"
        />
        <path
          fill={nodeColor || "#ccc"}
          d="M255.5,104C171.962,104,104,171.963,104,255.5S171.962,407,255.5,407S407,339.037,407,255.5S339.038,104,255.5,104z
M255.5,392C180.234,392,119,330.766,119,255.5S180.234,119,255.5,119S392,180.234,392,255.5S330.766,392,255.5,392z"
        />
        <path
          fill={nodeColor || "#ccc"}
          d="M283.5,216h-28c-4.142,0-7.5,3.358-7.5,7.5v64c0,4.142,3.358,7.5,7.5,7.5s7.5-3.358,7.5-7.5V271h20.5
c15.164,0,27.5-12.336,27.5-27.5S298.664,216,283.5,216z M283.5,256H263v-25h20.5c6.893,0,12.5,5.607,12.5,12.5
S290.393,256,283.5,256z"
        />
        <path
          fill={nodeColor || "#ccc"}
          d="M214.522,220.867c-1.098-2.927-3.896-4.867-7.022-4.867h-8c-3.126,0-5.925,1.939-7.022,4.867l-24,64
c-1.455,3.878,0.511,8.201,4.389,9.656c3.878,1.455,8.201-0.511,9.656-4.389L186.697,279h33.605l4.175,11.133
c1.129,3.011,3.987,4.869,7.023,4.869c0.875,0,1.765-0.154,2.632-0.479c3.878-1.454,5.844-5.778,4.389-9.656L214.522,220.867z
M192.322,264l11.178-29.807L214.678,264H192.322z"
        />
        <path
          fill={nodeColor || "#ccc"}
          d="M327.5,216c-4.142,0-7.5,3.358-7.5,7.5v64c0,4.142,3.358,7.5,7.5,7.5s7.5-3.358,7.5-7.5v-64
C335,219.358,331.642,216,327.5,216z"
        />
        <path
          fill={nodeColor || "#ccc"}
          d="M309.152,87.3c5.205,1.659,10.394,3.586,15.421,5.726c0.958,0.408,1.954,0.601,2.934,0.601c2.916,0,5.69-1.712,6.904-4.564
c1.622-3.811-0.152-8.216-3.963-9.838c-5.458-2.323-11.09-4.415-16.742-6.216c-3.945-1.258-8.165,0.922-9.423,4.868
C303.026,81.823,305.206,86.042,309.152,87.3z"
        />
        <path
          fill={nodeColor || "#ccc"}
          d="M100.45,339.904c-1.984-3.636-6.541-4.976-10.176-2.992c-3.636,1.984-4.976,6.54-2.992,10.176
c3.112,5.704,6.557,11.315,10.239,16.677c1.454,2.117,3.801,3.255,6.189,3.255c1.463,0,2.941-0.427,4.239-1.318
c3.415-2.345,4.282-7.014,1.937-10.428C106.493,350.332,103.318,345.161,100.45,339.904z"
        />
        <path
          fill={nodeColor || "#ccc"}
          d="M240.14,431.341c-40.189-3.463-78.337-20.879-107.416-49.041c-2.976-2.882-7.724-2.805-10.605,0.17
c-2.881,2.976-2.806,7.724,0.17,10.605c31.55,30.555,72.947,49.452,116.563,53.21c0.219,0.019,0.436,0.028,0.652,0.028
c3.851,0,7.127-2.949,7.464-6.856C247.323,435.331,244.266,431.697,240.14,431.341z"
        />
        <path
          fill={nodeColor || "#ccc"}
          d="M363.425,97.287c-3.42-2.337-8.087-1.459-10.424,1.96c-2.337,3.42-1.459,8.087,1.96,10.424
c34.844,23.813,60.049,59.248,70.972,99.776c0.902,3.346,3.93,5.55,7.237,5.55c0.646,0,1.303-0.084,1.956-0.26
c4-1.078,6.368-5.194,5.29-9.193C428.564,161.564,401.221,123.118,363.425,97.287z"
        />
      </g>
    </svg>
  );
};

export const SvgApiNode = ({ nodeColor }) => {
  return (
    <svg
      fill={nodeColor}
      height="26px"
      version="1.1"
      id="Capa_1"
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 511 511"
    >
      <g>
        <path
          fill={nodeColor}
          d="M492.168,309.579l-17.626-10.177c2.96-14.723,4.458-29.466,4.458-43.902c0-14.646-1.474-29.403-4.384-43.946l17.552-10.134
		c5.436-3.138,9.325-8.206,10.949-14.269s0.791-12.396-2.348-17.832l-48-83.139c-3.139-5.436-8.206-9.325-14.269-10.949
		c-6.064-1.624-12.396-0.791-17.833,2.348l-17.566,10.142C380.912,68.2,354.798,53.092,327,43.692V23.5
		C327,10.542,316.458,0,303.5,0h-96C194.542,0,184,10.542,184,23.5v20.193c-27.65,9.362-53.728,24.49-75.999,44.088L90.332,77.579
		c-5.437-3.139-11.77-3.973-17.833-2.348c-6.063,1.625-11.13,5.513-14.269,10.949l-48,83.139
		c-3.139,5.436-3.972,11.769-2.348,17.832s5.513,11.131,10.949,14.269l17.626,10.177C33.499,226.32,32,241.063,32,255.5
		c0,14.644,1.474,29.401,4.384,43.945l-17.552,10.134c-11.222,6.479-15.08,20.879-8.602,32.102l48,83.139
		c6.479,11.221,20.879,15.08,32.102,8.601l17.565-10.142c22.19,19.521,48.303,34.629,76.103,44.03V487.5
		c0,12.958,10.542,23.5,23.5,23.5h96c12.958,0,23.5-10.542,23.5-23.5v-20.193c27.651-9.362,53.729-24.49,76-44.087l17.668,10.201
		c11.221,6.479,25.623,2.62,32.102-8.601l48-83.139C507.248,330.458,503.39,316.058,492.168,309.579z M487.779,334.181l-48,83.138
		c-2.343,4.06-7.552,5.455-11.611,3.111l-22.392-12.928c-2.845-1.643-6.43-1.242-8.842,0.989
		c-22.893,21.173-50.437,37.148-79.653,46.199c-3.14,0.973-5.281,3.877-5.281,7.164V487.5c0,4.687-3.813,8.5-8.5,8.5h-96
		c-4.687,0-8.5-3.813-8.5-8.5v-25.645c0-3.287-2.141-6.191-5.28-7.164c-29.396-9.107-56.974-25.062-79.755-46.139
		c-1.421-1.315-3.25-1.995-5.095-1.995c-1.286,0-2.579,0.33-3.748,1.005L82.832,420.43c-4.06,2.343-9.268,0.948-11.611-3.111
		l-48-83.138c-2.343-4.059-0.947-9.268,3.111-11.612l22.272-12.859c2.844-1.642,4.289-4.942,3.566-8.146
		C48.739,286.357,47,270.858,47,255.5c0-15.1,1.765-30.584,5.247-46.022c0.722-3.203-0.723-6.504-3.566-8.145L26.332,188.43
		c-1.966-1.135-3.372-2.968-3.96-5.161c-0.587-2.193-0.286-4.484,0.849-6.45l48-83.139c1.135-1.966,2.968-3.373,5.162-3.96
		c2.192-0.588,4.484-0.286,6.45,0.849l22.392,12.928c2.846,1.644,6.43,1.242,8.842-0.989c22.894-21.173,50.437-37.148,79.653-46.199
		c3.14-0.973,5.281-3.877,5.281-7.164V23.5c0-4.687,3.813-8.5,8.5-8.5h96c4.687,0,8.5,3.813,8.5,8.5v25.645
		c0,3.287,2.141,6.191,5.28,7.164c29.395,9.106,56.973,25.061,79.755,46.139c2.412,2.232,5.997,2.633,8.843,0.99l22.29-12.869
		c1.967-1.135,4.258-1.437,6.45-0.849c2.193,0.588,4.026,1.994,5.162,3.96l48,83.139c1.135,1.966,1.437,4.257,0.849,6.45
		c-0.588,2.193-1.994,4.026-3.96,5.161l-22.272,12.859c-2.844,1.642-4.289,4.943-3.566,8.146c3.431,15.206,5.17,30.704,5.17,46.065
		c0,15.1-1.765,30.584-5.247,46.021c-0.722,3.203,0.723,6.503,3.566,8.145l22.349,12.903
		C488.727,324.913,490.123,330.122,487.779,334.181z"
        />
        <path
          fill={nodeColor}
          d="M255.5,104C171.962,104,104,171.963,104,255.5S171.962,407,255.5,407S407,339.037,407,255.5S339.038,104,255.5,104z
		 M255.5,392C180.234,392,119,330.766,119,255.5S180.234,119,255.5,119S392,180.234,392,255.5S330.766,392,255.5,392z"
        />
        <path
          fill={nodeColor}
          d="M283.5,216h-28c-4.142,0-7.5,3.358-7.5,7.5v64c0,4.142,3.358,7.5,7.5,7.5s7.5-3.358,7.5-7.5V271h20.5
		c15.164,0,27.5-12.336,27.5-27.5S298.664,216,283.5,216z M283.5,256H263v-25h20.5c6.893,0,12.5,5.607,12.5,12.5
		S290.393,256,283.5,256z"
        />
        <path
          fill={nodeColor}
          d="M214.522,220.867c-1.098-2.927-3.896-4.867-7.022-4.867h-8c-3.126,0-5.925,1.939-7.022,4.867l-24,64
		c-1.455,3.878,0.511,8.201,4.389,9.656c3.878,1.455,8.201-0.511,9.656-4.389L186.697,279h33.605l4.175,11.133
		c1.129,3.011,3.987,4.869,7.023,4.869c0.875,0,1.765-0.154,2.632-0.479c3.878-1.454,5.844-5.778,4.389-9.656L214.522,220.867z
		 M192.322,264l11.178-29.807L214.678,264H192.322z"
        />
        <path
          fill={nodeColor}
          d="M327.5,216c-4.142,0-7.5,3.358-7.5,7.5v64c0,4.142,3.358,7.5,7.5,7.5s7.5-3.358,7.5-7.5v-64
		C335,219.358,331.642,216,327.5,216z"
        />
        <path
          fill={nodeColor}
          d="M309.152,87.3c5.205,1.659,10.394,3.586,15.421,5.726c0.958,0.408,1.954,0.601,2.934,0.601c2.916,0,5.69-1.712,6.904-4.564
		c1.622-3.811-0.152-8.216-3.963-9.838c-5.458-2.323-11.09-4.415-16.742-6.216c-3.945-1.258-8.165,0.922-9.423,4.868
		C303.026,81.823,305.206,86.042,309.152,87.3z"
        />
        <path
          fill={nodeColor}
          d="M100.45,339.904c-1.984-3.636-6.541-4.976-10.176-2.992c-3.636,1.984-4.976,6.54-2.992,10.176
		c3.112,5.704,6.557,11.315,10.239,16.677c1.454,2.117,3.801,3.255,6.189,3.255c1.463,0,2.941-0.427,4.239-1.318
		c3.415-2.345,4.282-7.014,1.937-10.428C106.493,350.332,103.318,345.161,100.45,339.904z"
        />
        <path
          fill={nodeColor}
          d="M240.14,431.341c-40.189-3.463-78.337-20.879-107.416-49.041c-2.976-2.882-7.724-2.805-10.605,0.17
		c-2.881,2.976-2.806,7.724,0.17,10.605c31.55,30.555,72.947,49.452,116.563,53.21c0.219,0.019,0.436,0.028,0.652,0.028
		c3.851,0,7.127-2.949,7.464-6.856C247.323,435.331,244.266,431.697,240.14,431.341z"
        />
        <path
          fill={nodeColor}
          d="M363.425,97.287c-3.42-2.337-8.087-1.459-10.424,1.96c-2.337,3.42-1.459,8.087,1.96,10.424
		c34.844,23.813,60.049,59.248,70.972,99.776c0.902,3.346,3.93,5.55,7.237,5.55c0.646,0,1.303-0.084,1.956-0.26
		c4-1.078,6.368-5.194,5.29-9.193C428.564,161.564,401.221,123.118,363.425,97.287z"
        />
      </g>
    </svg>
  );
};

export const DeleteIcon = (props) => (
  <svg
    aria-hidden="true"
    fill="none"
    focusable="false"
    height="1em"
    role="presentation"
    viewBox="0 0 20 20"
    width="1em"
    {...props}
  >
    <path
      d="M17.5 4.98332C14.725 4.70832 11.9333 4.56665 9.15 4.56665C7.5 4.56665 5.85 4.64998 4.2 4.81665L2.5 4.98332"
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={1.5}
    />
    <path
      d="M7.08331 4.14169L7.26665 3.05002C7.39998 2.25835 7.49998 1.66669 8.90831 1.66669H11.0916C12.5 1.66669 12.6083 2.29169 12.7333 3.05835L12.9166 4.14169"
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={1.5}
    />
    <path
      d="M15.7084 7.61664L15.1667 16.0083C15.075 17.3166 15 18.3333 12.675 18.3333H7.32502C5.00002 18.3333 4.92502 17.3166 4.83335 16.0083L4.29169 7.61664"
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={1.5}
    />
    <path
      d="M8.60834 13.75H11.3833"
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={1.5}
    />
    <path
      d="M7.91669 10.4167H12.0834"
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={1.5}
    />
  </svg>
);

export const EditIcon = (props) => (
  <svg
    aria-hidden="true"
    fill="none"
    focusable="false"
    height="1em"
    role="presentation"
    viewBox="0 0 20 20"
    width="1em"
    {...props}
  >
    <path
      d="M11.05 3.00002L4.20835 10.2417C3.95002 10.5167 3.70002 11.0584 3.65002 11.4334L3.34169 14.1334C3.23335 15.1084 3.93335 15.775 4.90002 15.6084L7.58335 15.15C7.95835 15.0834 8.48335 14.8084 8.74168 14.525L15.5834 7.28335C16.7667 6.03335 17.3 4.60835 15.4583 2.86668C13.625 1.14168 12.2334 1.75002 11.05 3.00002Z"
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeMiterlimit={10}
      strokeWidth={1.5}
    />
    <path
      d="M9.90833 4.20831C10.2667 6.50831 12.1333 8.26665 14.45 8.49998"
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeMiterlimit={10}
      strokeWidth={1.5}
    />
    <path
      d="M2.5 18.3333H17.5"
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeMiterlimit={10}
      strokeWidth={1.5}
    />
  </svg>
);

export const EyeIcon = (props) => (
  <svg
    aria-hidden="true"
    fill="none"
    focusable="false"
    height="1em"
    role="presentation"
    viewBox="0 0 20 20"
    width="1em"
    {...props}
  >
    <path
      d="M12.9833 10C12.9833 11.65 11.65 12.9833 10 12.9833C8.35 12.9833 7.01666 11.65 7.01666 10C7.01666 8.35 8.35 7.01666 10 7.01666C11.65 7.01666 12.9833 8.35 12.9833 10Z"
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={1.5}
    />
    <path
      d="M9.99999 16.8916C12.9417 16.8916 15.6833 15.1583 17.5917 12.1583C18.3417 10.9833 18.3417 9.00831 17.5917 7.83331C15.6833 4.83331 12.9417 3.09998 9.99999 3.09998C7.05833 3.09998 4.31666 4.83331 2.40833 7.83331C1.65833 9.00831 1.65833 10.9833 2.40833 12.1583C4.31666 15.1583 7.05833 16.8916 9.99999 16.8916Z"
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={1.5}
    />
  </svg>
);

export const SvgResizeIcon = (props) => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="20"
      height="20"
      viewBox="0 0 24 24"
      strokeWidth="2"
      stroke="#ff0071"
      fill="none"
      strokeLinecap="round"
      strokeLinejoin="round"
      style={{ position: "absolute", right: 5, bottom: 5 }}
    >
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <polyline points="16 20 20 20 20 16" />
      <line x1="14" y1="14" x2="20" y2="20" />
      <polyline points="8 4 4 4 4 8" />
      <line x1="4" y1="4" x2="10" y2="10" />
    </svg>
  );
};

export const TickIcon = () => {
  const { darkMode } = useContext(DarkmodeContext);

  return (
    <svg
      width="16"
      height="16"
      viewBox="0 0 16 16"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <motion.path
        d="M0.326538 0.951538H15.3265V15.9515H0.326538V0.951538Z"
        fill={darkMode ? "#5B5B5B" : "#CBD0D8"}
        fill-opacity="0.08"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      />
      <motion.path
        d="M13.764 4.38907L5.59991 12.5141L1.88898 8.82088"
        stroke={darkMode ? "#D3D3D3" : "#000000"}
        stroke-width="1.5"
        stroke-linecap="round"
        stroke-linejoin="round"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
      />
    </svg>
  );
};
